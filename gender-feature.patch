diff --git a/components/profile_db.py b/components/profile_db.py
new file mode 100644
index 0000000..2c65f55
--- /dev/null
+++ b/components/profile_db.py
@@ -0,0 +1,37 @@
+import sqlite3
+import os
+
+DB_PATH = os.path.join(os.path.dirname(__file__), '..', 'user_profiles.db')
+
+def init_db():
+    conn = sqlite3.connect(DB_PATH)
+    cur = conn.cursor()
+    cur.execute('''
+        CREATE TABLE IF NOT EXISTS user_profiles (
+            chat_id INTEGER PRIMARY KEY,
+            gender TEXT NOT NULL
+        )
+    ''')
+    conn.commit()
+    conn.close()
+
+def save_user_gender(chat_id, gender):
+    conn = sqlite3.connect(DB_PATH)
+    cur = conn.cursor()
+    cur.execute('''
+        INSERT INTO user_profiles (chat_id, gender)
+        VALUES (?, ?)
+        ON CONFLICT(chat_id) DO UPDATE SET gender=excluded.gender
+    ''', (chat_id, gender))
+    conn.commit()
+    conn.close()
+
+def get_user_gender(chat_id):
+    conn = sqlite3.connect(DB_PATH)
+    cur = conn.cursor()
+    cur.execute('SELECT gender FROM user_profiles WHERE chat_id=?', (chat_id,))
+    row = cur.fetchone()
+    conn.close()
+    return row[0] if row else None
+
+# –í–∞–∂–Ω–æ! –í—ã–∑–æ–≤–∏ init_db() –û–î–ò–ù —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ç–æ—á–∫–µ –≤—Ö–æ–¥–∞, –¥–æ –∑–∞–ø—É—Å–∫–∞ polling/webhook)
diff --git a/handlers/conversation.py b/handlers/conversation.py
index 9b3a51f..2f7856d 100644
--- a/handlers/conversation.py
+++ b/handlers/conversation.py
@@ -1,6 +1,12 @@
 from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
 from telegram.ext import ContextTypes
+
+from components.profile_db import save_user_gender, get_user_gender
 from state.session import user_sessions
+
+GENDER_QUESTION = (
+    "–°–ø—Ä–æ—à—É —Ñ–æ—Ä–º—É –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Ç–µ–±–µ —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–ª–æ–≤–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π üòÖ\n"
+    "I‚Äôll ask how to address you right away to avoid any awkward moments üòÖ"
+)
 
 def get_interface_language_keyboard() -> InlineKeyboardMarkup:
     keyboard = [
@@ -21,6 +27,19 @@ ONBOARDING_MESSAGE = (
     "Tap the button below to select a language. ‚¨áÔ∏è"
 )
 
+def get_gender_keyboard() -> InlineKeyboardMarkup:
+    # –î–≤–∞ —Ä—è–¥–∞: —Ä—É—Å—Å–∫–∏–π –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
+    keyboard = [
+        [
+            InlineKeyboardButton("–º—É–∂", callback_data="gender_male"),
+            InlineKeyboardButton("–∂–µ–Ω", callback_data="gender_female"),
+            InlineKeyboardButton("–¥—Ä—É–≥", callback_data="gender_friend"),
+        ],
+        [
+            InlineKeyboardButton("male", callback_data="gender_male"),
+            InlineKeyboardButton("female", callback_data="gender_female"),
+            InlineKeyboardButton("friend", callback_data="gender_friend"),
+        ]
+    ]
+    return InlineKeyboardMarkup(keyboard)
 
 async def handle_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
     chat_id = update.effective_chat.id
 
     # –û—á–∏—â–∞–µ–º –≤—Å—é —Å–µ—Å—Å–∏—é, –≤–∫–ª—é—á–∞—è –∏—Å—Ç–æ—Ä–∏—é
     user_sessions[chat_id] = {}
 
     # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Ç–µ–ø–µ—Ä—å –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é "ru", –Ω–æ –º–æ–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å)
     interface_lang = context.user_data.get("interface_lang", "ru")
 
     # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ reply-–∫–Ω–æ–ø–∫–∏
     await update.message.reply_text(PREPARING_MESSAGE, reply_markup=ReplyKeyboardRemove())
 
     # –ù–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–µ–∑ –ª–∏—à–Ω–µ–π —Å—Ç—Ä–æ–∫–∏ ‚Äî —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏!
     await update.message.reply_text(ONBOARDING_MESSAGE, reply_markup=get_interface_language_keyboard())
+
+    # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ñ–æ—Ä–º—É –æ–±—Ä–∞—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï –≤—ã–±—Ä–∞–Ω–∞ —Ä–∞–Ω–µ–µ
+    gender = get_user_gender(chat_id)
+    if not gender:
+        await update.message.reply_text(GENDER_QUESTION, reply_markup=get_gender_keyboard())
diff --git a/handlers/conversation_callback.py b/handlers/conversation_callback.py
index 24de85c..b79dbad 100644
--- a/handlers/conversation_callback.py
+++ b/handlers/conversation_callback.py
@@ -1,5 +1,16 @@
 from telegram import Update
 from telegram.ext import ContextTypes
+from components.profile_db import save_user_gender
 
 async def handle_callback_query(update: Update, context: ContextTypes.DEFAULT_TYPE):
     query = update.callback_query
     data = query.data
     # ... —Ç–≤–æ—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞ ...
+
+    chat_id = query.message.chat_id
+    if data == "gender_male":
+        save_user_gender(chat_id, "male")
+        await query.answer("–í—ã–±—Ä–∞–Ω–æ: –º—É–∂ / male")
+    elif data == "gender_female":
+        save_user_gender(chat_id, "female")
+        await query.answer("–í—ã–±—Ä–∞–Ω–æ: –∂–µ–Ω / female")
+    elif data == "gender_friend":
+        save_user_gender(chat_id, "friend")
+        await query.answer("–í—ã–±—Ä–∞–Ω–æ: –¥—Ä—É–≥ / friend")
