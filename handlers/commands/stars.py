from telegram import Update
from telegram.ext import ContextTypes
import aiohttp
import os

from components.admins import ADMIN_IDS

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

async def stars_command(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    uid = update.effective_user.id if update.effective_user else None
    if not uid or uid not in ADMIN_IDS:
        await update.message.reply_text("‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getMyStarBalance"

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                data = await resp.json()

        if data.get("ok"):
            balance = data["result"]["stars"]
            euros = balance / 100  # 1 Star = 0.01 ‚Ç¨
            await update.message.reply_text(
                f"‚≠ê –ë–∞–ª–∞–Ω—Å –±–æ—Ç–∞: {balance} Stars\n"
                f"üí∂ –í –µ–≤—Ä–æ: ~ {euros:.2f} ‚Ç¨"
            )
        else:
            await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –±–∞–ª–∞–Ω—Å–∞:\n{data}")
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
