from __future__ import annotations
from typing import Dict, Any
from telegram import Update
from telegram.ext import ContextTypes

# –≤–∞—à –∏–Ω-–º–µ–º–æ—Ä–∏ —Å—Ç–æ—Ä
from state.session import user_sessions  # dict-like: {chat_id: {...}}

# –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
from components.onboarding import send_onboarding  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç –∏ –∑–∞–≤–æ–¥–∏—Ç —ç—Ç–∞–ø—ã

# –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –µ—Å–ª–∏ –µ—Å—Ç—å –≤–∞—à –ª–æ–≥–≥–µ—Ä
import logging
logger = logging.getLogger("english-bot")

# —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö "—Ñ–ª–∞–≥–æ–≤ —Ä–µ–∂–∏–º–∞", –∫–æ—Ç–æ—Ä—ã–µ –∏–Ω–æ–≥–¥–∞ –∫–ª–∞–¥—É—Ç –≤ —Å–µ—Å—Å–∏—é
# –µ—Å–ª–∏ —É –≤–∞—Å –¥—Ä—É–≥–∏–µ –∫–ª—é—á–∏ ‚Äî –¥–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞, –ª–∏—à–Ω–µ–µ —É–¥–∞–ª—è—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ
RESET_KEYS = {
    "mode",
    "teach_mode",
    "glossary_mode",
    "router",
    "awaiting",
    "awaiting_promo",
    "onboarding_stage",
    "interface_lang",
    "language",
    "level",
    "style",
}


async def reset_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ñ—ë—Å—Ç–∫–∏–π —Å–±—Ä–æ—Å —Å–µ—Å—Å–∏–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞.
    –ß–∏—Å—Ç–∏–º:
      - PTB: context.user_data, context.chat_data
      - –Ω–∞—à —Å—Ç–æ—Ä: state.session.user_sessions[chat_id]
    """
    chat_id = update.effective_chat.id

    # 1) PTB-–¥–∞–Ω–Ω—ã–µ
    try:
        (context.user_data or {}).clear()
        (context.chat_data or {}).clear()
    except Exception as e:
        logger.debug("reset: cannot clear PTB data: %r", e)

    # 2) –ù–∞—à –∏–Ω-–º–µ–º–æ—Ä–∏ —Å—Ç–æ—Ä
    try:
        sess = user_sessions.get(chat_id)
        if isinstance(sess, dict):
            # —Ç–æ—á–µ—á–Ω–æ –≤—ã—á–∏—â–∞–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–ª—é—á–∏ —Ä–µ–∂–∏–º–∞
            for k in list(sess.keys()):
                if k in RESET_KEYS:
                    sess.pop(k, None)
        # –∏ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π ‚Äî –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω—É–ª–∏–º –∑–∞–ø–∏—Å—å
        user_sessions.pop(chat_id, None)
    except Exception as e:
        logger.debug("reset: cannot clear user_sessions: %r", e)

    # 3) –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        await (update.effective_message or update.message).reply_text("üßπ –°–µ—Å—Å–∏—é –æ—á–∏—Å—Ç–∏–ª. –ó–∞–ø—É—Å–∫–∞—é –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–Ω–æ–≤–æ.")
    except Exception:
        # —Ç–∏—Ö–∏–π —Ñ–æ–ª–±—ç–∫
        await context.bot.send_message(chat_id, "üßπ –°–µ—Å—Å–∏—é –æ—á–∏—Å—Ç–∏–ª. –ó–∞–ø—É—Å–∫–∞—é –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–Ω–æ–≤–æ.")

    # 4) –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
    # –≤–∞–∂–Ω–æ: send_onboarding —Å–∞–º –≤—ã—Å—Ç–∞–≤–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–æ–ª—è —Å–µ—Å—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, interface_lang / onboarding_stage)
    await send_onboarding(update, context)
