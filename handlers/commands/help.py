from __future__ import annotations
import asyncio
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from components.i18n import get_ui_lang
from components.profile_db import get_user_profile
from components.usage_db import get_usage
from components.access import has_access

FREE_DAILY_LIMIT = 15  # –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ free-–∫–∞—Ä—Ç–æ—á–∫–µ

# --------- –¢–µ–∫—Å—Ç—ã —Å–ø—Ä–∞–≤–∫–∏ (–±–µ–∑ /teach) ---------
HELP_BODY_RU = (
    "üÜò –ö–æ–º–∞–Ω–¥—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n\n"
    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    "‚Ä¢ /help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
    "\n"
    "‚Ä¢ /start ‚Äî –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ (–æ–Ω–±–æ—Ä–¥–∏–Ω–≥)\n"
    "‚Ä¢ /settings ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—è–∑—ã–∫, —É—Ä–æ–≤–µ–Ω—å, —Å—Ç–∏–ª—å)\n"
    "‚Ä¢ /language ‚Äî —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –æ–±—â–µ–Ω–∏—è\n"
    "‚Ä¢ /level ‚Äî —Å–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å (A0‚ÄìC2)\n"
    "‚Ä¢ /style ‚Äî —Å–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è\n"
    "‚Ä¢ /buy ‚Äî –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø\n"
    "‚Ä¢ /promo ‚Äî –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥\n"
    "‚Ä¢ /donate ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç\n"
    "\n"
    "–°–æ–≤–µ—Ç—ã –ø–æ –æ–±—â–µ–Ω–∏—é —Å –ú—ç—Ç—Ç–æ–º:\n"
    "‚Ä¢ –ú—ç—Ç—Ç ‚Äî —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. –û–Ω –Ω–µ –≤–∏–¥–∏—Ç –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–ø–ª–∞—Ç—É. –§—Ä–∞–∑—ã –≤—Ä–æ–¥–µ ¬´–ø–æ–º–µ–Ω—è–π —É—Ä–æ–≤–µ–Ω—å/—è–∑—ã–∫/—Å—Ç–∏–ª—å¬ª –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—é—Ç ‚Äî "
    "–¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã: /settings, /language, /level, /style; –æ–ø–ª–∞—Ç–∞ ‚Äî /buy, /donate –∏ /promo –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞.\n"
    "‚Ä¢ –ú–æ–∂–Ω–æ –æ–±—â–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–º –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É—Å–ª—ã—à–∞—Ç—å, –∫–∞–∫ —á—Ç–æ-—Ç–æ –∑–≤—É—á–∏—Ç, –Ω–∞–ø–∏—à–∏ ¬´–æ–∑–≤—É—á—å¬ª ‚Äî "
    "–ú—ç—Ç—Ç –ø—Ä–∏—à–ª—ë—Ç –∞—É–¥–∏–æ (—Ä–∞–∑–æ–≤–∞—è –æ–∑–≤—É—á–∫–∞, —Ä–µ–∂–∏–º –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è).\n"
    "‚Ä¢ –ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤ /settings –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –¥–∏–∞–ª–æ–≥.\n"
)

HELP_BODY_EN = (
    "üÜò Commands & Instructions\n\n"
    "Available commands:\n"
    "‚Ä¢ /help ‚Äî show this message\n"
    "\n"
    "‚Ä¢ /start ‚Äî start over (onboarding)\n"
    "‚Ä¢ /settings ‚Äî open settings (language, level, style)\n"
    "‚Ä¢ /language ‚Äî change the chat language\n"
    "‚Ä¢ /level ‚Äî change the level (A0‚ÄìC2)\n"
    "‚Ä¢ /style ‚Äî change the conversation style\n"
    "‚Ä¢ /buy ‚Äî purchase access\n"
    "‚Ä¢ /promo ‚Äî enter a promo code\n"
    "‚Ä¢ /donate ‚Äî support the project\n"
    "\n"
    "Tips for chatting with Matt:\n"
    "‚Ä¢ Matt is a conversation partner. He doesn‚Äôt see your settings or billing. Saying ‚Äúchange my level/language/style‚Äù won‚Äôt work ‚Äî "
    "use /settings, /language, /level, /style. Payments/promos go through /buy, /donate, and /promo.\n"
    "‚Ä¢ You can chat in voice or text. If you want to hear how something sounds, say ‚Äúvoice it‚Äù ‚Äî "
    "Matt will send a one-off audio reply (it doesn‚Äôt switch the mode).\n"
    "‚Ä¢ Pro tip: in /settings, changes apply immediately after selection ‚Äî just keep chatting.\n"
)

def _kb(ui: str) -> InlineKeyboardMarkup:
    buy_label = "Buy 30 days ‚Äî 149 ‚≠ê" if ui == "en" else "–ö—É–ø–∏—Ç—å 30 –¥–Ω–µ–π ‚Äî 149 ‚≠ê"
    how_label = "How to pay?" if ui == "en" else "–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å?"
    settings_label = "‚öôÔ∏è Settings" if ui == "en" else "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    promo_label = "Promo code" if ui == "en" else "–ü—Ä–æ–º–æ–∫–æ–¥"
    donate_label = "Support" if ui == "en" else "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å"

    rows = [
        [InlineKeyboardButton(settings_label, callback_data="open:settings")],
        [
            InlineKeyboardButton(buy_label, callback_data="htp_buy"),
            InlineKeyboardButton(how_label, callback_data="htp_start"),
        ],
        [
            InlineKeyboardButton(promo_label, callback_data="open:promo"),
            InlineKeyboardButton(donate_label, callback_data="open:donate"),
        ],
    ]
    return InlineKeyboardMarkup(rows)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    ui = get_ui_lang(update, context)
    chat_id = update.effective_chat.id
    user_id = update.effective_user.id

    # –ë–î/–∞–∫–∫–∞—É–Ω—Ç ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —á–µ—Ä–µ–∑ thread pool
    is_premium, used, profile = await asyncio.gather(
        asyncio.to_thread(has_access, user_id),
        asyncio.to_thread(get_usage, user_id),
        asyncio.to_thread(get_user_profile, user_id),
    )
    profile = profile or {}

    # –ö–∞—Ä—Ç–æ—á–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (–¥–∏–Ω–∞–º–∏–∫–∞ –∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏)
    if ui == "ru":
        if is_premium:
            until = (profile.get("premium_expires_at") or "‚Äî")
            header = f"*üåü –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–µ–Ω*\n–î–æ—Å—Ç—É–ø –¥–æ: `{until}`"
            card = ""
        else:
            header = "*üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º*"
            card = f"\n–°–µ–≥–æ–¥–Ω—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: *{used}/{FREE_DAILY_LIMIT}*"
        body = HELP_BODY_RU
    else:
        if is_premium:
            until = (profile.get("premium_expires_at") or "‚Äî")
            header = f"*üåü Premium is active*\nAccess until: `{until}`"
            card = ""
        else:
            header = "*üÜì Free plan*"
            card = f"\nUsed today: *{used}/{FREE_DAILY_LIMIT}*"
        body = HELP_BODY_EN

    text = f"{header}{card}\n\n{body}"

    await context.bot.send_message(
        chat_id=chat_id,
        text=text,
        parse_mode="Markdown",
        reply_markup=_kb(ui),
    )
