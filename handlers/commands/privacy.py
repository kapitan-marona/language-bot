# handlers/commands/privacy.py
from __future__ import annotations
from telegram import Update
from telegram.ext import ContextTypes
from components.i18n import get_ui_lang

# --- –¢–ï–ö–°–¢ /privacy (RU/EN) ---

def _privacy_text(ui: str) -> str:
    if ui == "en":
        return (
            "üîí <b>Privacy & data</b>\n\n"
            "<b>What I store</b>\n"
            "‚Ä¢ your Telegram chat ID (to reply to you);\n"
            "‚Ä¢ your learning settings (interface/target language, level, chat style);\n"
            "‚Ä¢ usage counters (to show free limits);\n"
            "‚Ä¢ payment status via Telegram Stars (no card data ‚Äî payments are handled by Telegram).\n\n"
            "<b>Why</b>\n"
            "‚Ä¢ to remember preferences and keep the conversation flow;\n"
            "‚Ä¢ to show limits and process payments.\n\n"
            "<b>Where & how long</b>\n"
            "‚Ä¢ stored in a managed cloud DB; access is limited to the bot owner;\n"
            "‚Ä¢ we keep data while you use the bot or until you delete it.\n\n"
            "<b>Control</b>\n"
            "‚Ä¢ use /delete_me to remove your data;\n"
            "‚Ä¢ questions: @marrona.\n"
        )
    else:
        return (
            "üîí <b>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n"
            "<b>–ß—Ç–æ —è —Ö—Ä–∞–Ω—é</b>\n"
            "‚Ä¢ –≤–∞—à Telegram chat ID (—á—Ç–æ–±—ã –æ—Ç–≤–µ—á–∞—Ç—å –≤–∞–º);\n"
            "‚Ä¢ –≤–∞—à–∏ —É—á–µ–±–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞/—Ü–µ–ª–∏, —É—Ä–æ–≤–µ–Ω—å, —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è);\n"
            "‚Ä¢ —Å—á—ë—Ç—á–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (—á—Ç–æ–±—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏–º–∏—Ç—ã);\n"
            "‚Ä¢ —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç —á–µ—Ä–µ–∑ Telegram Stars (–±–µ–∑ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç ‚Äî –æ–ø–ª–∞—Ç—É –≤–µ–¥—ë—Ç Telegram).\n\n"
            "<b>–ó–∞—á–µ–º</b>\n"
            "‚Ä¢ —á—Ç–æ–±—ã –ø–æ–º–Ω–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞;\n"
            "‚Ä¢ —á—Ç–æ–±—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏–º–∏—Ç—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ–ø–ª–∞—Ç—ã.\n\n"
            "<b>–ì–¥–µ –∏ –∫–∞–∫ –¥–æ–ª–≥–æ</b>\n"
            "‚Ä¢ –≤ —É–ø—Ä–∞–≤–ª—è–µ–º–æ–π –æ–±–ª–∞—á–Ω–æ–π –ë–î, –¥–æ—Å—Ç—É–ø –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞;\n"
            "‚Ä¢ —Ö—Ä–∞–Ω–∏–º –ø–æ–∫–∞ –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –±–æ—Ç–æ–º –∏–ª–∏ –¥–æ –≤–∞—à–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è.\n\n"
            "<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</b>\n"
            "‚Ä¢ –∫–æ–º–∞–Ω–¥–∞ /delete_me —É–¥–∞–ª–∏—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ;\n"
            "‚Ä¢ –≤–æ–ø—Ä–æ—Å—ã: @marrona.\n"
        )

async def privacy_command(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    ui = get_ui_lang(update, ctx)
    await update.effective_message.reply_text(_privacy_text(ui), parse_mode="HTML")


# --- /delete_me: —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö –ë–î ---

async def delete_me_command(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    ui = get_ui_lang(update, ctx)
    chat_id = update.effective_chat.id

    # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å delete_user –≤ –º–æ–¥—É–ª—è—Ö –ë–î. –ï—Å–ª–∏ –º–æ–¥—É–ª—å –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.
    removed_total = 0
    details = []

    def _try(module_path, fn_name="delete_user"):
        nonlocal removed_total, details
        try:
            mod = __import__(module_path, fromlist=[fn_name])
            fn = getattr(mod, fn_name)
            n = int(fn(chat_id) or 0)
            removed_total += n
            details.append(f"{module_path}: {n}")
        except Exception:
            # –Ω–∏—á–µ–≥–æ –Ω–µ –ø–∞–¥–∞–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –≤ —ç—Ç–æ–π –ë–î –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å/—Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç
            pass

    # –ü–æ—Ä—è–¥–æ–∫: –ø—Ä–æ—Ñ–∏–ª–∏, usage, (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) training/glossary
    _try("components.profile_db")
    _try("components.usage_db")
    _try("components.training_db")  # –µ—Å–ª–∏ teach –≤—ã–∫–ª—é—á–µ–Ω ‚Äî —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å

    # –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –≤ –ø–∞–º—è—Ç–∏, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ user_sessions
    try:
        from state.session import user_sessions
        user_sessions.pop(chat_id, None)
    except Exception:
        pass

    if ui == "en":
        if removed_total > 0:
            msg = "‚úÖ Your data has been deleted."
        else:
            msg = "‚úÖ No stored personal data found (or it was already removed)."
        tail = "\n\nDetails:\n" + "\n".join(details) if details else ""
        await update.effective_message.reply_text(msg + tail)
    else:
        if removed_total > 0:
            msg = "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã."
        else:
            msg = "‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–∏–ª–∏ –æ–Ω–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω—ã)."
        tail = "\n\n–î–µ—Ç–∞–ª–∏:\n" + "\n".join(details) if details else ""
        await update.effective_message.reply_text(msg + tail)
