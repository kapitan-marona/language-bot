# handlers/commands/privacy.py
from __future__ import annotations
from telegram import Update
from telegram.ext import ContextTypes
from components.i18n import get_ui_lang

# --- —Å—Å—ã–ª–∫–∏ ---
PRIVACY_LINKS = {
    "ru": "https://docs.google.com/document/d/1wv_vEGxH9ZxsYhYyl0ckJyKIaUlFU7KbgBzFoalZblg/edit?usp=sharing",
    "en": "https://docs.google.com/document/d/1Czelw_JYSHuRcKoIB1LzFBdL7e-hxd81M0YzaUMBl-w/edit?usp=sharing",
}

# --- —Ç–µ–∫—Å—Ç ---
def _privacy_text(ui: str) -> str:
    if ui == "en":
        return (
            "üîí <b>Privacy & data</b>\n\n"
            "The bot stores only technical data: your ID, settings, usage counters, and payment status. "
            "This is needed to keep the conversation flow and show limits.\n\n"
            "You can delete your data anytime with /delete_me.\n"
            f"Details: <a href='{PRIVACY_LINKS['en']}'>Privacy Policy</a>"
        )
    else:
        return (
            "üîí <b>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –¥–∞–Ω–Ω—ã–µ</b>\n\n"
            "–ë–æ—Ç —Ö—Ä–∞–Ω–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ: –≤–∞—à ID, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —Å—á—ë—Ç—á–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç. "
            "–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ–º–Ω–∏—Ç—å –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–æ–π /delete_me.\n"
            f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ: <a href='{PRIVACY_LINKS['ru']}'>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>"
        )

async def privacy_command(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    ui = get_ui_lang(update, ctx)
    await update.effective_message.reply_text(_privacy_text(ui), parse_mode="HTML")


# --- /delete_me (—á–µ–ª–æ–≤–µ—á–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞) ---

async def delete_me_command(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    ui = get_ui_lang(update, ctx)
    chat_id = update.effective_chat.id

    removed_total = 0

    def _try(module_path, fn_name="delete_user"):
        nonlocal removed_total
        try:
            mod = __import__(module_path, fromlist=[fn_name])
            fn = getattr(mod, fn_name)
            n = int(fn(chat_id) or 0)
            removed_total += n
        except Exception:
            pass

    _try("components.profile_db")
    _try("components.usage_db")
    _try("components.training_db")

    try:
        from state.session import user_sessions
        user_sessions.pop(chat_id, None)
    except Exception:
        pass

    if ui == "en":
        if removed_total > 0:
            msg = "‚úÖ Your data has been deleted.\nThe bot has erased your profile and usage info."
        else:
            msg = "‚úÖ No personal data found (or it was already removed)."
    else:
        if removed_total > 0:
            msg = "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã.\n–ë–æ—Ç —Å—Ç–µ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏."
        else:
            msg = "‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–∏–ª–∏ –æ–Ω–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω—ã)."

    await update.effective_message.reply_text(msg)
