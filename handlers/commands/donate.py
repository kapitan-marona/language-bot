# handlers/commands/donate.py
from __future__ import annotations
import re
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ApplicationHandlerStop
from state.session import user_sessions
from components.i18n import get_ui_lang
from components.payments import send_donation_invoice

logger = logging.getLogger(__name__)

# –î–∏–∞–ø–∞–∑–æ–Ω –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å—É–º–º –¥–æ–Ω–∞—Ç–∞ –≤ –∑–≤—ë–∑–¥–∞—Ö
MIN_DONATE = 1
MAX_DONATE = 10_000

# –ü—Ä–µ—Å–µ—Ç—ã —Å—É–º–º
_PRESETS = [10, 20, 50]

# –î–æ 5 —Ü–∏—Ñ—Ä ‚Äî —Ö–≤–∞—Ç–∏—Ç –¥–ª—è 10_000
_AMOUNT_RE = re.compile(r"^\s*(\d{1,5})\s*$")
# –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º: /donate 50 –∏–ª–∏ /donate@bot 50
_CMD_AMOUNT_RE = re.compile(r"^/donate(?:@\S+)?\s+(\d{1,5})\s*$", re.IGNORECASE)

def _donate_keyboard(ui: str) -> InlineKeyboardMarkup:
    rows = [[InlineKeyboardButton(str(p), callback_data=f"DONATE:{p}") for p in _PRESETS]]
    rows.append([InlineKeyboardButton("–î—Ä—É–≥–∞—è —Å—É–º–º–∞" if ui == "ru" else "Other amount",
                                      callback_data="DONATE:CUSTOM")])
    rows.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞" if ui == "ru" else "‚ùå Cancel",
                                      callback_data="DONATE:CANCEL")])
    return InlineKeyboardMarkup(rows)

async def donate_command(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    """
    /donate [amount]
    –ü—Ä–∏–º–µ—Ä: /donate 50 ‚Äî —Å—Ä–∞–∑—É —Å—á—ë—Ç –Ω–∞ 50‚≠ê
    –ë–µ–∑ —Å—É–º–º—ã ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–µ—Å–µ—Ç–æ–≤ + –î—Ä—É–≥–∞—è —Å—É–º–º–∞ + –û—Ç–º–µ–Ω–∞.
    """
    ui = get_ui_lang(update, ctx)
    chat_id = update.effective_chat.id
    sess = user_sessions.setdefault(chat_id, {})
    sess.pop("donate_waiting_amount", None)  # —Å–±—Ä–æ—Å–∏–º –≤–æ–∑–º–æ–∂–Ω—ã–π —Ñ–ª–∞–≥

    text_full = (update.message.text or "").strip()
    logger.info("DONATE CMD: text=%r args=%r", text_full, getattr(ctx, "args", None))

    # 1) –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —Å—É–º–º—É –∏–∑ —Å–∞–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–∞–Ω–¥—ã (/donate 50, /donate@bot 50)
    m_text = _CMD_AMOUNT_RE.match(text_full)
    if m_text:
        amount = int(m_text.group(1))
        if MIN_DONATE <= amount <= MAX_DONATE:
            await send_donation_invoice(update, ctx, amount)
            raise ApplicationHandlerStop  # –±–ª–æ–∫–∏—Ä—É–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã
        warn = (f"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {MIN_DONATE} –¥–æ {MAX_DONATE}‚≠ê"
                if ui == "ru" else
                f"Amount must be between {MIN_DONATE} and {MAX_DONATE}‚≠ê")
        await update.message.reply_text(warn)
        raise ApplicationHandlerStop

    # 2) –î–∞–ª—å—à–µ ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å —á–µ—Ä–µ–∑ ctx.args (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –≤—ã—à–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ)
    args = getattr(ctx, "args", None) or []
    if args:
        m = _AMOUNT_RE.match(" ".join(args))
        if not m:
            text = ("–£–∫–∞–∂–∏ —Å—É–º–º—É –∫–∞–∫ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: /donate 50"
                    if ui == "ru" else
                    "Provide the amount as a number, e.g.: /donate 50")
            await update.message.reply_text(text)
            raise ApplicationHandlerStop
        amount = int(m.group(1))
        if amount < MIN_DONATE or amount > MAX_DONATE:
            text = (f"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {MIN_DONATE} –¥–æ {MAX_DONATE}‚≠ê"
                    if ui == "ru" else
                    f"Amount must be between {MIN_DONATE} and {MAX_DONATE}‚≠ê")
            await update.message.reply_text(text)
            raise ApplicationHandlerStop
        await send_donation_invoice(update, ctx, amount)
        raise ApplicationHandlerStop

    # 3) –ò–Ω–∞—á–µ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ—Å–µ—Ç—ã
    text = ("–ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç –ª—é–±–æ–π —Å—É–º–º–æ–π –≤ –∑–≤—ë–∑–¥–∞—Ö ‚≠ê\n\n"
            "–í—ã–±–µ—Ä–∏ —Å—É–º–º—É –∏–ª–∏ —É–∫–∞–∂–∏ –¥—Ä—É–≥—É—é." if ui == "ru" else
            "Support the project with any amount of Stars ‚≠ê\n\n"
            "Pick an amount or enter a custom one.")
    await update.message.reply_text(text, reply_markup=_donate_keyboard(ui))
    raise ApplicationHandlerStop  # —á—Ç–æ–±—ã —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ—à–ª–æ –¥–∞–ª—å—à–µ –≤ —á–∞—Ç-–±–æ—Ç
        

async def on_callback(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ö–æ–ª–±—ç–∫–∏ DONATE:<...>
    DONATE:<N>      ‚Äî —Å—Ä–∞–∑—É –∏–Ω–≤–æ–π—Å
    DONATE:CUSTOM   ‚Äî –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ, –∂–¥—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    DONATE:CANCEL   ‚Äî –æ—Ç–º–µ–Ω—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–æ–Ω–∞—Ç–∞
    """
    q = update.callback_query
    if not q or not q.data:
        return

    ui = get_ui_lang(update, ctx)
    chat_id = q.message.chat.id
    sess = user_sessions.setdefault(chat_id, {})
    data = q.data

    logger.info("DONATE CB: %s", data)

    # –û—Ç–º–µ–Ω–∞
    if data == "DONATE:CANCEL":
        sess.pop("donate_waiting_amount", None)
        try:
            await q.answer("‚ùå")
        except Exception:
            pass
        text = "–û—Ç–º–µ–Ω–∏–ª, –≤—Å—ë –æ–∫ üëç" if ui == "ru" else "Cancelled, no worries üëç"
        await q.edit_message_text(text)
        return

    # –î—Ä—É–≥–∞—è —Å—É–º–º–∞ ‚Äî –∂–¥—ë–º —á–∏—Å–ª–æ
    if data == "DONATE:CUSTOM":
        sess["donate_waiting_amount"] = True
        try:
            await q.answer("‚Ä¶")
        except Exception:
            pass
        ask = ("–í–≤–µ–¥–∏ —Å—É–º–º—É —á–∏—Å–ª–æ–º (1‚Äì10000). –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å /donate 50."
               if ui == "ru" else
               "Send the amount as a number (1‚Äì10000). Or use /donate 50.")
        kb = InlineKeyboardMarkup([[InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞" if ui == "ru" else "‚ùå Cancel",
                                                         callback_data="DONATE:CANCEL")]])
        await q.edit_message_text(ask, reply_markup=kb)
        return

    # DONATE:<N>
    if data.startswith("DONATE:"):
        try:
            amount = int(data.split(":", 1)[1])
        except Exception:
            await q.answer("‚ö†Ô∏è")
            return
        if amount < MIN_DONATE or amount > MAX_DONATE:
            await q.answer("‚ö†Ô∏è")
            warn = (f"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {MIN_DONATE} –¥–æ {MAX_DONATE}‚≠ê"
                    if ui == "ru" else
                    f"Amount must be between {MIN_DONATE} and {MAX_DONATE}‚≠ê")
            await q.edit_message_text(warn)
            return
        try:
            await q.answer("‚úÖ")
        except Exception:
            pass
        await send_donation_invoice(update, ctx, amount)
        return

async def on_amount_message(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–∏—Å–ª–æ–º, –µ—Å–ª–∏ –¥–æ —ç—Ç–æ–≥–æ –≤—ã–±—Ä–∞–ª–∏ ¬´–î—Ä—É–≥–∞—è —Å—É–º–º–∞¬ª.
    –ï—Å–ª–∏ —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω ‚Äî –º–æ–ª—á–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º (–¥–∞–¥–∏–º –ø—Ä–æ–π—Ç–∏ –¥—Ä—É–≥–∏–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º).
    """
    chat_id = update.effective_chat.id
    sess = user_sessions.setdefault(chat_id, {})
    if not sess.get("donate_waiting_amount"):
        return  # –Ω–µ –Ω–∞—à –∫–µ–π—Å ‚Äî –ø–µ—Ä–µ–¥–∞–¥–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω—ã–º

    ui = get_ui_lang(update, ctx)
    text = (update.message.text or "").strip()
    logger.info("DONATE AMOUNT MSG: %r (waiting=%s)", text, True)

    m = _AMOUNT_RE.match(text)
    if not m:
        warn = ("–£–∫–∞–∂–∏ —Å—É–º–º—É –∫–∞–∫ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä 50. –ò–ª–∏ /donate 50."
                if ui == "ru" else
                "Provide the amount as a number, e.g. 50. Or /donate 50.")
        await update.message.reply_text(warn)
        raise ApplicationHandlerStop  # –±–ª–æ–∫–∏—Ä—É–µ–º —á–∞—Ç-—Ö–µ–Ω–¥–ª–µ—Ä

    amount = int(m.group(1))
    if amount < MIN_DONATE or amount > MAX_DONATE:
        warn = (f"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {MIN_DONATE} –¥–æ {MAX_DONATE}‚≠ê"
                if ui == "ru" else
                f"Amount must be between {MIN_DONATE} and {MAX_DONATE}‚≠ê")
        await update.message.reply_text(warn)
        raise ApplicationHandlerStop

    # –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–≤–æ–π—Å
    sess.pop("donate_waiting_amount", None)
    await send_donation_invoice(update, ctx, amount)
    raise ApplicationHandlerStop
