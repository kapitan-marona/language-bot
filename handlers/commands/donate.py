from __future__ import annotations
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

async def donate_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = context.user_data.get("ui_lang", "ru")
    if lang == "ru":
        text = (
            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç! üôå\n\n"
            "–°–µ–π—á–∞—Å –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ Telegram Stars.\n"
            "–ù–∞–∂–º–∏ /buy ‚Äî –æ—Ñ–æ—Ä–º–∏ –¥–æ—Å—Ç—É–ø –Ω–∞ 30 –¥–Ω–µ–π –∑–∞ 149 ‚≠ê (—ç—Ç–æ —Ç–æ–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∞).\n\n"
            "–ï—Å–ª–∏ —É–≤–∏–¥–∏—à—å –∫–Ω–æ–ø–∫—É *Get Stars* ‚Äî –ø–æ–ø–æ–ª–Ω–∏ ‚≠ê –∏ –≤–µ—Ä–Ω–∏—Å—å –∫ —Å—á—ë—Ç—É."
        )
        btns = [[InlineKeyboardButton("–û—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç—É–ø (/buy)", callback_data="htp_buy")]]
    else:
        text = (
            "Thanks for supporting the project! üôå\n\n"
            "Support is available via Telegram Stars.\n"
            "Tap /buy ‚Äî get 30-day access for 149 ‚≠ê (that supports the project, too).\n\n"
            "If you see *Get Stars*, top up ‚≠ê and return to the invoice."
        )
        btns = [[InlineKeyboardButton("Proceed to /buy", callback_data="htp_buy")]]

    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(btns))
