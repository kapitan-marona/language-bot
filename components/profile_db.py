import sqlite3
import os
from datetime import datetime

DB_PATH = os.path.abspath("user_profiles.db")


def init_db():
    with sqlite3.connect(DB_PATH) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS user_profiles (
                user_id INTEGER PRIMARY KEY,
                native_lang TEXT,
                target_lang TEXT,
                style TEXT,
                gender TEXT,
                promo_code_used TEXT,                  -- üü° –¥–æ–±–∞–≤–ª–µ–Ω–æ: –ø—Ä–æ–º–æ–∫–æ–¥
                promo_type TEXT,                       -- üü° –¥–æ–±–∞–≤–ª–µ–Ω–æ: —Ç–∏–ø –ø—Ä–æ–º–æ (permanent, timed, english_only)
                promo_activated_at TEXT,               -- üü° –¥–æ–±–∞–≤–ª–µ–Ω–æ: –¥–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                promo_days INTEGER                     -- üü° –¥–æ–±–∞–≤–ª–µ–Ω–æ: —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –¥–µ–π—Å—Ç–≤—É–µ—Ç
            )
        ''')
        conn.commit()


def save_user_profile(user_id, profile):
    with sqlite3.connect(DB_PATH) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            INSERT OR REPLACE INTO user_profiles (
                user_id, native_lang, target_lang, style, gender,
                promo_code_used, promo_type, promo_activated_at, promo_days
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
        ''', (
            user_id,
            profile.get("native_lang"),
            profile.get("target_lang"),
            profile.get("style"),
            profile.get("gender"),
            profile.get("promo_code_used"),      # üü° —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥
            profile.get("promo_type"),           # üü° —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø
            profile.get("promo_activated_at"),   # üü° —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É
            profile.get("promo_days")            # üü° —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ä–æ–∫
        ))
        conn.commit()


def load_user_profile(user_id):
    with sqlite3.connect(DB_PATH) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            SELECT user_id, native_lang, target_lang, style, gender,
                   promo_code_used, promo_type, promo_activated_at, promo_days
            FROM user_profiles WHERE user_id = ?
        ''', (user_id,))
        row = cursor.fetchone()
        if row:
            return {
                "user_id": row[0],
                "native_lang": row[1],
                "target_lang": row[2],
                "style": row[3],
                "gender": row[4],
                "promo_code_used": row[5],        # üü° –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–¥
                "promo_type": row[6],             # üü° –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–∏–ø
                "promo_activated_at": row[7],     # üü° –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç—É
                "promo_days": row[8]              # üü° –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ä–æ–∫
            }
        else:
            return {
                "user_id": user_id,
                "native_lang": None,
                "target_lang": None,
                "style": None,
                "gender": None,
                "promo_code_used": None,         # üü° –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ—Ç –ø—Ä–æ–º–æ
                "promo_type": None,
                "promo_activated_at": None,
                "promo_days": None
            }


# üü° –¥–æ–±–∞–≤–ª–µ–Ω–æ: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω

def save_user_gender(user_id, gender):
    profile = load_user_profile(user_id)
    if not profile.get("gender"):
        profile["gender"] = gender
        save_user_profile(user_id, profile)
