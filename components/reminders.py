# components/reminders.py
from __future__ import annotations
import random
from datetime import datetime, timedelta, timezone
from typing import Iterable, Tuple, Dict, Any

from telegram import Bot

from components.profile_db import get_user_profile, save_user_profile

NUDGE_INTERVAL_DAYS = 14
BATCH_LIMIT = 200  # –ø—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å

# –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ, ¬´–∂–∏–≤—ã–µ¬ª –ø–æ–¥—Å–∫–∞–∑–∫–∏ (–¥–æ–±–∞–≤–ª—è–π/–º–µ–Ω—è–π –ø–æ –≤–∫—É—Å—É)
NUDGE_TEXTS = {
    "ru": [
        "–•–µ–π üëã —è —Ç—É—Ç –ø–æ—Å–º–æ—Ç—Ä–µ–ª –≤—Å–µ —á–∞—Å—Ç–∏ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–∞ —Ä–∞–∑–æ–º! –•–æ—á—É –æ–±—Å—É–¥–∏—Ç—å —Å —Ç–æ–±–æ–π –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.",
        "–°–ª—É—à–∞–π, —Ç—ã —É–º–µ–µ—à—å –≥–æ—Ç–æ–≤–∏—Ç—å –ª–∞–∑–∞–Ω—å—é? –ï—Å–ª–∏ –¥–∞ ‚Äî –Ω–∞—É—á–∏ –º–µ–Ω—è! üçù –ê –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø–æ–¥—Å–∫–∞–∂–∏ —á—Ç–æ –µ—â—ë –≤–∫—É—Å–Ω–æ–≥–æ –º–æ–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –Ω–∞ —É–∂–∏–Ω.",
        "–ê—Ö–∞—Ö–∞, –ø—Ä–∏–∫–æ–ª —Ö–æ—á–µ—à—å? üòÑ –í –Ω–µ–º–µ—Ü–∫–æ–º –µ—Å—Ç—å –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ Donaudampfschifffahrtsgesellschaftskapit√§n ‚Äî —ç—Ç–æ ¬´–∫–∞–ø–∏—Ç–∞–Ω –∫–æ–º–ø–∞–Ω–∏–∏ –¥—É–Ω–∞–π—Å–∫–∏—Ö –ø–∞—Ä–æ—Ö–æ–¥–æ–≤¬ª! –ù–µ–º—Ü—ã –ª—é–±—è—Ç –¥–ª–∏–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ üòÖ",
        "–•–µ–π! –£ –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º–∞ (—Å–º–µ—ë—Ç—Å—è) ‚Äî –≤ –≥–æ–ª–æ–≤–µ –∑–∞—Å—Ç—Ä—è–ª–∞ –ø–µ—Å–Ω—è. –¶–µ–ª—ã–π –¥–µ–Ω—å –∏–≥—Ä–∞–µ—Ç ¬´Du, du hast‚Ä¶¬ª Rammstein ü§ò –ó–Ω–∞–µ—à—å —Å–ø–æ—Å–æ–±—ã, –∫–∞–∫ –≤—ã–∫–∏–Ω—É—Ç—å –ø–µ—Å–Ω—é –∏–∑ –≥–æ–ª–æ–≤—ã?",
        "–•–µ–ª–ª–æ—É)) –ú–Ω–µ —Ç—É—Ç –ø–æ–ø–∞–ª–∞—Å—å —Å–º–µ—à–Ω–∞—è –∑–∞–≥–∞–¥–∫–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º‚Ä¶ –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–∞–∑–≥–∞–¥–∞—Ç—å? üòâ",
        "–ü—Ä–∏–≤–µ—Ç–∏–∫! –Ø –∫ —Ç–µ–±–µ —Å –Ω–µ–æ–±—ã—á–Ω–æ–π –ø—Ä–æ—Å—å–±–æ–π. –Ø –∑–∞–¥—É–º–∞–ª—Å—è, —á—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–æ–≥—É –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∞—Ä–æ–º–∞—Ç—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ —è AI ü§ñ –ú–æ–∂–µ—à—å –æ–ø–∏—Å–∞—Ç—å –∞—Ä–æ–º–∞—Ç –ª–µ—Å–∞?",
    ],
    "en": [
        "Hey üëã I just binge-watched all the Harry Potter movies! I‚Äôd love to share impressions with you.",
        "Quick question: do you know how to cook lasagna? üçù If yes ‚Äî teach me! If not, maybe suggest something else tasty for dinner.",
        "Haha, fun fact! üòÑ In German there‚Äôs a super long word Donaudampfschifffahrtsgesellschaftskapit√§n ‚Äî it means ‚ÄúDanube steamship company captain‚Äù! Germans love long words üòÖ",
        "Hey! I‚Äôve got a funny problem üòÇ A song got stuck in my head all day: ‚ÄúDu, du hast‚Ä¶‚Äù by Rammstein ü§ò Any tips to get rid of an earworm?",
        "Hellooo üòÅ I just found a silly riddle in English‚Ä¶ Want to try to solve it?",
        "Hi there! I‚Äôve got a strange request ü§ñ I realized I‚Äôll never be able to smell anything because I‚Äôm AI. Could you describe what a forest smells like?",
    ],
}

def _pick_ui_lang(profile: Dict[str, Any] | None) -> str:
    ui = (profile or {}).get("interface_lang") or "en"
    return ui if ui in NUDGE_TEXTS else "en"

def _need_nudge(profile: Dict[str, Any] | None, now: datetime) -> bool:
    if not profile:
        return False
    try:
        last_seen = profile.get("last_seen_at")
        if not last_seen:
            return False
        dt_last = datetime.fromisoformat(last_seen)
        if dt_last.tzinfo is None:
            dt_last = dt_last.replace(tzinfo=timezone.utc)
    except Exception:
        return False

    if now - dt_last < timedelta(days=NUDGE_INTERVAL_DAYS):
        return False

    last_nudge = profile.get("nudge_last_sent")
    if last_nudge:
        try:
            dt_nudge = datetime.fromisoformat(last_nudge)
            if dt_nudge.tzinfo is None:
                dt_nudge = dt_nudge.replace(tzinfo=timezone.utc)
        except Exception:
            dt_nudge = None
        if dt_nudge and (now - dt_nudge) < timedelta(days=NUDGE_INTERVAL_DAYS):
            return False

    return True

async def run_nudges(bot: Bot, chat_ids: Iterable[int], *, dry_run: bool = False) -> Tuple[int, int]:
    """
    –û–±—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ chat_ids, –≤—ã–±–∏—Ä–∞–µ—Ç ¬´–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö¬ª –∏ —à–ª—ë—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (processed, sent).
    """
    now = datetime.now(timezone.utc)
    processed = 0
    sent = 0

    for chat_id in chat_ids:
        if processed >= BATCH_LIMIT:
            break
        processed += 1

        profile = get_user_profile(chat_id)
        if not _need_nudge(profile, now):
            continue

        ui = _pick_ui_lang(profile)
        text = random.choice(NUDGE_TEXTS[ui])

        if not dry_run:
            try:
                await bot.send_message(chat_id=chat_id, text=text)
                save_user_profile(chat_id, nudge_last_sent=now.isoformat())
                sent += 1
            except Exception:
                # –Ω–µ –ø–∞–¥–∞–µ–º, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                pass

    return processed, sent
