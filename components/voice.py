import os
import tempfile
import subprocess
from openai import OpenAI
from config.config import OPENAI_API_KEY

client = OpenAI(api_key=OPENAI_API_KEY)

def synthesize_voice(text: str, language_code: str, style: str = "casual", level: str = "A2") -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–∑–≤—É—á–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI TTS (TTS-1), —Å –≤—ã–±–æ—Ä–æ–º –≥–æ–ª–æ—Å–∞ –ø–æ —Å—Ç–∏–ª—é.
    """
    style_to_voice = {
        "casual": "alloy",        # üòé Cool ‚Äî —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —Å—Ç–∏–ª—å
        "business": "fable"       # ü§ì –ë–∏–∑–Ω–µ—Å/–¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å
    }
    voice = style_to_voice.get(style.lower(), "alloy")  # –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ –ø–æ —Å—Ç–∏–ª—é, default = alloy

    print(f"üîä [TTS] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ–ª–æ—Å '{voice}' ({language_code}, —Å—Ç–∏–ª—å {style})")

    try:
        response = client.audio.speech.create(
            model="tts-1",
            voice=voice,
            input=text
        )
        with tempfile.NamedTemporaryFile(delete=False, suffix=".ogg") as out_file:
            out_file.write(response.content)
            out_path = out_file.name

        # –ü–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ ffmpeg (–≤–∞–∂–Ω–æ –¥–ª—è Telegram)
        fixed_path = out_path.replace(".ogg", "_fixed.ogg")
        subprocess.run(["ffmpeg", "-y", "-i", out_path, "-c:a", "libopus", fixed_path], check=True)
        print("‚úÖ [FFMPEG] –ü–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:", fixed_path)
        return fixed_path

    except Exception as e:
        print(f"[TTS Error] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—á–∏: {e}")
        return ""
