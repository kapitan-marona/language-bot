import os
import tempfile
import subprocess  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ
from pathlib import Path
from openai import OpenAI
from config.config import OPENAI_API_KEY

client = OpenAI(api_key=OPENAI_API_KEY)

def synthesize_voice(text: str, language_code: str, level: str) -> str:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–∑–≤—É—á–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI TTS (TTS-1).
    """
    style_to_voice = {
        "casual": "alloy",
        "business": "fable"
    }
    voice = style_to_voice.get(level.lower(), "alloy")  # ‚úÖ –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ –ø–æ —Å—Ç–∏–ª—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é alloy)

    speed = {
        "A0": 0.85,
        "A1": 0.9,
        "A2": 0.95,
        "B1": 1.0,
        "B2": 1.05,
        "C1": 1.1,
        "C2": 1.15,
    }.get(level.upper(), 1.0)  # ‚úÖ –í—ã–±–æ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è

    print(f"üîä [TTS] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ–ª–æ—Å '{voice}' ({language_code}, —É—Ä–æ–≤–µ–Ω—å {level}, —Å–∫–æ—Ä–æ—Å—Ç—å {speed})")

    try:
        response = client.audio.speech.create(
            model="tts-1",
            voice=voice,
            input=text
        )

        with tempfile.NamedTemporaryFile(delete=False, suffix=".ogg") as out_file:
            out_file.write(response.content)
            out_path = out_file.name

        # ‚úÖ –ü–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ ffmpeg (–≤–∞–∂–Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Telegram)
        fixed_path = out_path.replace(".ogg", "_fixed.ogg")
        subprocess.run(["ffmpeg", "-y", "-i", out_path, "-c:a", "libopus", fixed_path], check=True)
        print("‚úÖ [FFMPEG] –ü–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:", fixed_path)
        return fixed_path

    except Exception as e:
        print(f"[TTS Error] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—á–∏: {e}")
        return ""
