import os
import tempfile
from pathlib import Path
from openai import OpenAI
from config.config import OPENAI_API_KEY

client = OpenAI(api_key=OPENAI_API_KEY)

def synthesize_voice(text: str, language_code: str, level: str) -> str:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–∑–≤—É—á–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI TTS (TTS-1).

    :param text: –¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
    :param language_code: –Ø–∑—ã–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx-XX (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–≥–æ–≤)
    :param level: –£—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è —è–∑—ã–∫–æ–º (A0, A1, B1, ...)
    :return: –ü—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É –∞—É–¥–∏–æ—Ñ–∞–π–ª—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ .ogg
    """
    # üéØ –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ –ø–æ —Å—Ç–∏–ª—é –æ–±—â–µ–Ω–∏—è
    style_to_voice = {
        "casual": "alloy",
        "business": "fable"
    }
    voice = style_to_voice.get(level.lower(), "alloy")

    # üîà –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ (–ø—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ API, –ø–æ–∫–∞ OpenAI TTS –Ω–µ –¥–∞—ë—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å speed –Ω–∞–ø—Ä—è–º—É—é)
    speed = {
        "A0": 0.85,
        "A1": 0.9,
        "A2": 0.95,
        "B1": 1.0,
        "B2": 1.05,
        "C1": 1.1,
        "C2": 1.15,
    }.get(level.upper(), 1.0)

    print(f"üîä [TTS] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ–ª–æ—Å '{voice}' ({language_code}, —É—Ä–æ–≤–µ–Ω—å {level}, —Å–∫–æ—Ä–æ—Å—Ç—å {speed})")

    try:
        response = client.audio.speech.create(
            model="tts-1",
            voice=voice,
            input=text
        )

        with tempfile.NamedTemporaryFile(delete=False, suffix=".ogg") as out_file:
            out_file.write(response.content)
            out_path = out_file.name

        return out_path

    except Exception as e:
        print(f"[TTS Error] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—á–∏: {e}")
        return ""
