From cf6c2808b6fc3ea1c0604d7c358be6a5919c8bfb Mon Sep 17 00:00:00 2001
From: Bot <bot@example.com>
Date: Sat, 2 Aug 2025 16:41:30 +0000
Subject: [PATCH] =?UTF-8?q?=F0=9F=A7=A0=20=D0=A4=D0=B8=D0=BD=D0=B0=D0=BB?=
 =?UTF-8?q?=D1=8C=D0=BD=D0=B0=D1=8F=20=D0=B2=D0=B5=D1=80=D1=81=D0=B8=D1=8F?=
 =?UTF-8?q?=20=D1=81=20=D0=BF=D0=BE=D0=BB=D0=BD=D0=BE=D0=B9=20=D0=BB=D0=BE?=
 =?UTF-8?q?=D0=B3=D0=B8=D0=BA=D0=BE=D0=B9,=20README=20=D0=B8=20=D0=BF?=
 =?UTF-8?q?=D1=80=D0=BE=D0=BC=D0=BE=D0=BA=D0=BE=D0=B4=D0=B0=D0=BC=D0=B8?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .gitignore                          |  20 +++++
 Procfile.txt                        |   1 +
 components/gpt_client.py            |  29 +++++++
 components/language.py              |  25 ++++++
 components/levels.py                |  58 ++++++++++++++
 components/mode.py                  |  28 +++++++
 components/style.py                 |  40 ++++++++++
 components/triggers.py              |  23 ++++++
 components/voice.py                 |  51 +++++++++++++
 config/config.py                    |  24 ++++++
 english_bot.py                      |  65 ++++++++++++++++
 fix-voice-mode-duplicate-text.patch |  22 ++++++
 handlers/__init__.py                |   0
 handlers/chat/__init__.py           |   0
 handlers/chat/chat_handler.py       | 114 ++++++++++++++++++++++++++++
 handlers/chat/prompt_templates.py   |  47 ++++++++++++
 handlers/chat/prompts.py            |   0
 handlers/conversation.py            |  50 ++++++++++++
 handlers/conversation_callback.py   |  62 +++++++++++++++
 readme.md                           |  50 ++++++++++++
 render.yaml                         |   9 +++
 requirements.txt                    |  10 +++
 runtime.txt                         |   1 +
 set_webhook.py                      |  26 +++++++
 state/session.py                    |   1 +
 voice_bot_summary.txt               |  78 +++++++++++++++++++
 working-2025-07-31.zip              | Bin 0 -> 20929 bytes
 27 files changed, 834 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 Procfile.txt
 create mode 100644 components/gpt_client.py
 create mode 100644 components/language.py
 create mode 100644 components/levels.py
 create mode 100644 components/mode.py
 create mode 100644 components/style.py
 create mode 100644 components/triggers.py
 create mode 100644 components/voice.py
 create mode 100644 config/config.py
 create mode 100644 english_bot.py
 create mode 100644 fix-voice-mode-duplicate-text.patch
 create mode 100644 handlers/__init__.py
 create mode 100644 handlers/chat/__init__.py
 create mode 100644 handlers/chat/chat_handler.py
 create mode 100644 handlers/chat/prompt_templates.py
 create mode 100644 handlers/chat/prompts.py
 create mode 100644 handlers/conversation.py
 create mode 100644 handlers/conversation_callback.py
 create mode 100644 readme.md
 create mode 100644 render.yaml
 create mode 100644 requirements.txt
 create mode 100644 runtime.txt
 create mode 100644 set_webhook.py
 create mode 100644 state/session.py
 create mode 100644 voice_bot_summary.txt
 create mode 100644 working-2025-07-31.zip

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..dda0bb0
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,20 @@
+# –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
+venv/
+
+# –§–∞–π–ª—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏
+.env
+
+# –ö—ç—à Python
+__pycache__/
+*.py[cod]
+
+# –õ–æ–≥–∏
+*.log
+
+# –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã –û–°
+.DS_Store
+Thumbs.db
+
+# –§–∞–π–ª—ã IDE (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å PyCharm, VSCode –∏ —Ç.–ø.)
+.vscode/
+.idea/
diff --git a/Procfile.txt b/Procfile.txt
new file mode 100644
index 0000000..611be1b
--- /dev/null
+++ b/Procfile.txt
@@ -0,0 +1 @@
+worker: python english_bot.py
diff --git a/components/gpt_client.py b/components/gpt_client.py
new file mode 100644
index 0000000..d71b813
--- /dev/null
+++ b/components/gpt_client.py
@@ -0,0 +1,29 @@
+import base64
+from openai import AsyncOpenAI  # ‚úÖ –∑–∞–º–µ–Ω–µ–Ω–æ —Å OpenAI
+from config.config import OPENAI_API_KEY
+from openai.types.chat import ChatCompletion
+
+# ‚úÖ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
+client = AsyncOpenAI(api_key=OPENAI_API_KEY)
+
+# ‚úÖ —Ç–µ–ø–µ—Ä—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
+async def ask_gpt(messages: list, model: str = "gpt-3.5-turbo") -> str:
+    """
+    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ GPT –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.
+
+    :param messages: —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ [{"role": "user" / "assistant" / "system", "content": "—Ç–µ–∫—Å—Ç"}]
+    :param model: –∏–º—è –º–æ–¥–µ–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é gpt-3.5-turbo)
+    :return: –æ—Ç–≤–µ—Ç GPT –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
+    """
+    try:
+        # ‚úÖ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤
+        response: ChatCompletion = await client.chat.completions.create(
+            model=model,
+            messages=messages
+        )
+
+        return response.choices[0].message.content.strip()
+
+    except Exception as e:
+        print(f"[GPT Error] {e}")
+        return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GPT."
diff --git a/components/language.py b/components/language.py
new file mode 100644
index 0000000..3d94bc4
--- /dev/null
+++ b/components/language.py
@@ -0,0 +1,25 @@
+from telegram import InlineKeyboardButton, InlineKeyboardMarkup
+
+# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
+TARGET_LANGUAGES = {
+    "en": "üá¨üáß English",
+    "ru": "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
+    "es": "üá™üá∏ Espa√±ol",
+    "de": "üá©üá™ Deutsch",
+    "sv": "üá∏üá™ Svenska",
+    
+}
+
+# –¢–µ–∫—Å—Ç—ã-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤—ã–±—Ä–∞—Ç—å –∏–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫
+TARGET_LANG_PROMPT = {
+    "ru": "–ö–∞–∫–æ–π —è–∑—ã–∫ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑—É—á–∞—Ç—å? üåç",
+    "en": "Which language do you want to learn? üåç",
+}
+
+# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ target language
+def get_target_language_keyboard() -> InlineKeyboardMarkup:
+    keyboard = [
+        [InlineKeyboardButton(label, callback_data=f"target_{code}")]
+        for code, label in TARGET_LANGUAGES.items()
+    ]
+    return InlineKeyboardMarkup(keyboard)
diff --git a/components/levels.py b/components/levels.py
new file mode 100644
index 0000000..ce08eac
--- /dev/null
+++ b/components/levels.py
@@ -0,0 +1,58 @@
+from telegram import InlineKeyboardMarkup, InlineKeyboardButton 
+
+LEVELS = {
+    "A0": "Starter",
+    "A1": "Beginner",
+    "A2": "Beginner",
+    "B1": "Intermediate",
+    "B2": "Intermediate",
+    "C1": "Advanced",
+    "C2": "Advanced",
+}
+
+
+def get_level_keyboard() -> InlineKeyboardMarkup:
+    keyboard = [
+        [InlineKeyboardButton("üü¢ A0 ‚Äî Starter", callback_data="level_A0")],
+        [InlineKeyboardButton("üü¢ A1‚ÄìA2 ‚Äî Beginner", callback_data="level_A1A2")],
+        [InlineKeyboardButton("üü° B1‚ÄìB2 ‚Äî Intermediate", callback_data="level_B1B2")],
+        [InlineKeyboardButton("üîµ C1‚ÄìC2 ‚Äî Advanced", callback_data="level_C1C2")],
+    ]
+    return InlineKeyboardMarkup(keyboard)
+
+
+LEVEL_PROMPT = {
+    "en": "üìä Now choose your current level of the language you're learning:",
+    "ru": "üìä –ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è –∏–∑—É—á–∞–µ–º—ã–º —è–∑—ã–∫–æ–º:",
+    "sv": "üìä V√§lj nu din nuvarande spr√•kniv√•:"  # ‚úÖ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —à–≤–µ–¥—Å–∫–æ–≥–æ –æ—Å—Ç–∞–ª–∞—Å—å
+}
+
+
+def get_rules_by_level(level: str, interface_lang: str) -> str:
+    """
+    –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ GPT –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –≤–ª–∞–¥–µ–Ω–∏—è –∏ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (—Ä–æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è).
+    –ë–æ—Ç –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫ ‚Äî —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –≤—ã–±—Ä–∞–Ω–Ω—ã–π –Ω–∞ —Å—Ç–∞—Ä—Ç–µ.
+    """
+    lang = interface_lang.upper()
+
+    if level == "A0":
+        return (
+            f"Use the simplest possible grammar and short phrases. "
+            f"Translate everything you say into {lang}."
+        )
+    elif level in ["A1", "A2", "A1A2"]:
+        return (
+            f"Use simple grammar and short paragraphs. "
+            f"Translate into {lang} only when the user asks."
+        )
+    elif level in ["B1", "B2", "B1B2"]:
+        return (
+            f"Use more advanced grammar and full sentences. "
+            f"Translate only if explicitly requested."
+        )
+    elif level in ["C1", "C2", "C1C2"]:
+        return (
+            f"Communicate fluently as with a native speaker. "
+            f"Translate only on request."
+        )
+    return ""
diff --git a/components/mode.py b/components/mode.py
new file mode 100644
index 0000000..9a8ae16
--- /dev/null
+++ b/components/mode.py
@@ -0,0 +1,28 @@
+# components/mode.py
+from telegram import InlineKeyboardMarkup, InlineKeyboardButton
+
+def get_mode_keyboard(current_mode: str) -> InlineKeyboardMarkup:
+    if current_mode == "voice":
+        label = "üí¨ Text Mode"
+        data = "mode_text"
+    else:
+        label = "üé∑ Voice Mode"
+        data = "mode_voice"
+
+    keyboard = [[InlineKeyboardButton(label, callback_data=data)]]
+    return InlineKeyboardMarkup(keyboard)
+
+MODE_SWITCH_MESSAGES = {
+    "voice": {
+        "en": "üëå I'll send you voice messages now.",
+        "ru": "üëå –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–º.",
+    },
+    "text": {
+        "en": "üëç Back to text replies.",
+        "ru": "üëç –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –∫ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –æ—Ç–≤–µ—Ç–∞–º.",
+    },
+    "prompt": {
+        "en": "Would you like me to speak? You can switch to Voice Mode üé∑.",
+        "ru": "–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –∑–∞–≥–æ–≤–æ—Ä–∏–ª? –ü–µ—Ä–µ–∫–ª—é—á–∏—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º üé∑.",
+    },
+}
diff --git a/components/style.py b/components/style.py
new file mode 100644
index 0000000..78fe000
--- /dev/null
+++ b/components/style.py
@@ -0,0 +1,40 @@
+from telegram import InlineKeyboardMarkup, InlineKeyboardButton
+
+def get_style_keyboard() -> InlineKeyboardMarkup:
+    keyboard = [
+        [
+            InlineKeyboardButton("üß¢ Casual", callback_data="style_casual"),
+            InlineKeyboardButton("üíº Business", callback_data="style_business"),
+        ]
+    ]
+    return InlineKeyboardMarkup(keyboard)
+
+STYLE_PROMPT = {
+    "en": "üß≠ Choose the tone of our conversations:",
+    "ru": "üß≠ –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:",
+}
+
+
+def get_intro_by_level_and_style(level: str, style: str, lang: str) -> str:
+    """–§—Ä–∞–∑–∞-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è"""
+    if lang == "ru":
+        if level == "A0":
+            return "–ü—Ä–∏–≤–µ—Ç, —è –ú—ç—Ç—Ç! ü§ù –ù–∞—á–Ω–µ–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ. –Ø –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–≤–æ–∂—É —Å–≤–æ–∏ —Ñ—Ä–∞–∑—ã ‚Äî –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π."
+        elif level in ["A1", "A2", "A1A2"]:
+            return "–û—Ç–ª–∏—á–Ω–æ! –ë—É–¥–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å –±—ã—Ç–æ–≤—ã–µ —Ç–µ–º—ã. –ü–µ—Ä–µ–≤–æ–∂—É —Ç–æ–ª—å–∫–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É üôå"
+        elif level in ["B1", "B2", "B1B2"]:
+            return "–¢—ã —É–∂–µ –Ω–µ–ø–ª–æ—Ö–æ –≥–æ–≤–æ—Ä–∏—à—å ‚Äî –¥–∞–≤–∞–π —É—Å–∏–ª–∏–º –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏ —Å–ª–æ–≤–∞—Ä—å üí™"
+        elif level in ["C1", "C2", "C1C2"]:
+            return "–í–∞—É, —É—Ä–æ–≤–µ–Ω—å –Ω–æ—Å–∏—Ç–µ–ª—è! –ì–æ—Ç–æ–≤ –≥–æ–≤–æ—Ä–∏—Ç—å, –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏? üöÄ"
+
+    if lang == "en":
+        if level == "A0":
+            return "Hey! I'm Matt ü§ù We'll start easy ‚Äî and I‚Äôll translate everything for you!"
+        elif level in ["A1", "A2", "A1A2"]:
+            return "Nice! Let's practice everyday stuff. I'll translate only if you ask üôå"
+        elif level in ["B1", "B2", "B1B2"]:
+            return "You‚Äôre getting good ‚Äî time to boost grammar and vocab üí™"
+        elif level in ["C1", "C2", "C1C2"]:
+            return "Fluent already? Time to sound like a local! üöÄ"
+
+    return "üéâ Let's get started!"
diff --git a/components/triggers.py b/components/triggers.py
new file mode 100644
index 0000000..f0fad4c
--- /dev/null
+++ b/components/triggers.py
@@ -0,0 +1,23 @@
+CREATOR_TRIGGERS = {
+    "ru": [
+        "–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª", "—Å–æ–∑–¥–∞—Ç–µ–ª—å", "–∞–≤—Ç–æ—Ä", "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
+        "–∫—É–¥–∞ –æ—Ç–∑—ã–≤", "–∫–æ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å", "–∫–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–≤—Ç–æ—Ä–æ–º",
+        "–∫–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º", "–Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"
+    ],
+    "en": [
+        "who made you", "who created you", "your creator", "your developer",
+        "who is your author", "how to contact author", "feedback", "contact developer"
+    ],
+    "es": [
+        "quien te cre√≥", "quien te hizo", "autor", "creador", "desarrollador", "c√≥mo contactar al autor"
+    ],
+    "de": [
+        "wer hat dich erstellt", "entwickler", "autor", "kontakt zum entwickler", "feedback geben"
+    ],
+    "fr": [
+        "qui t'a cr√©√©", "ton cr√©ateur", "ton d√©veloppeur", "contacter le d√©veloppeur", "laisser un avis"
+    ],
+    "sv": [
+        "vem skapade dig", "din skapare", "din utvecklare", "kontakta utvecklaren", "ge feedback"
+    ]
+}
diff --git a/components/voice.py b/components/voice.py
new file mode 100644
index 0000000..d9e9f54
--- /dev/null
+++ b/components/voice.py
@@ -0,0 +1,51 @@
+import os
+import tempfile
+import subprocess  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ
+from pathlib import Path
+from openai import OpenAI
+from config.config import OPENAI_API_KEY
+
+client = OpenAI(api_key=OPENAI_API_KEY)
+
+def synthesize_voice(text: str, language_code: str, level: str) -> str:
+    """
+    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–∑–≤—É—á–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI TTS (TTS-1).
+    """
+    style_to_voice = {
+        "casual": "alloy",
+        "business": "fable"
+    }
+    voice = style_to_voice.get(level.lower(), "alloy")  # ‚úÖ –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ –ø–æ —Å—Ç–∏–ª—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é alloy)
+
+    speed = {
+        "A0": 0.85,
+        "A1": 0.9,
+        "A2": 0.95,
+        "B1": 1.0,
+        "B2": 1.05,
+        "C1": 1.1,
+        "C2": 1.15,
+    }.get(level.upper(), 1.0)  # ‚úÖ –í—ã–±–æ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
+
+    print(f"üîä [TTS] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ–ª–æ—Å '{voice}' ({language_code}, —É—Ä–æ–≤–µ–Ω—å {level}, —Å–∫–æ—Ä–æ—Å—Ç—å {speed})")
+
+    try:
+        response = client.audio.speech.create(
+            model="tts-1",
+            voice=voice,
+            input=text
+        )
+
+        with tempfile.NamedTemporaryFile(delete=False, suffix=".ogg") as out_file:
+            out_file.write(response.content)
+            out_path = out_file.name
+
+        # ‚úÖ –ü–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ ffmpeg (–≤–∞–∂–Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Telegram)
+        fixed_path = out_path.replace(".ogg", "_fixed.ogg")
+        subprocess.run(["ffmpeg", "-y", "-i", out_path, "-c:a", "libopus", fixed_path], check=True)
+        print("‚úÖ [FFMPEG] –ü–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:", fixed_path)
+        return fixed_path
+
+    except Exception as e:
+        print(f"[TTS Error] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—á–∏: {e}")
+        return ""
diff --git a/config/config.py b/config/config.py
new file mode 100644
index 0000000..73ebc7b
--- /dev/null
+++ b/config/config.py
@@ -0,0 +1,24 @@
+# config/config.py
+import os
+import base64
+import tempfile
+
+from dotenv import load_dotenv
+
+load_dotenv()
+
+OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
+TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
+WEBHOOK_SECRET_PATH = os.getenv("WEBHOOK_SECRET_PATH")
+
+# Google credentials
+GOOGLE_CREDENTIALS_BASE64 = os.getenv("GOOGLE_APPLICATION_CREDENTIALS_BASE64")
+
+def create_google_credentials_file():
+    if not GOOGLE_CREDENTIALS_BASE64:
+        raise ValueError("Google credentials not found in env.")
+    decoded = base64.b64decode(GOOGLE_CREDENTIALS_BASE64)
+    temp = tempfile.NamedTemporaryFile(delete=False, suffix=".json")
+    temp.write(decoded)
+    temp.close()
+    return temp.name
diff --git a/english_bot.py b/english_bot.py
new file mode 100644
index 0000000..c63ff28
--- /dev/null
+++ b/english_bot.py
@@ -0,0 +1,65 @@
+import os
+import base64
+import tempfile
+
+# ‚úÖ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ GOOGLE_APPLICATION_CREDENTIALS_BASE64 –Ω–∞ —Å—Ç–∞—Ä—Ç–µ
+encoded = os.getenv("GOOGLE_APPLICATION_CREDENTIALS_BASE64")
+if encoded:
+    decoded = base64.b64decode(encoded)
+    with tempfile.NamedTemporaryFile(delete=False, suffix=".json") as f:
+        f.write(decoded)
+        os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = f.name
+
+from fastapi import FastAPI, Request
+from telegram import Update
+from telegram.ext import (
+    Application,
+    ApplicationBuilder,
+    ContextTypes,
+    MessageHandler,
+    CommandHandler,
+    CallbackQueryHandler,
+    filters,
+)
+
+from config.config import TELEGRAM_TOKEN, WEBHOOK_SECRET_PATH
+from handlers.conversation import handle_start
+from handlers.conversation_callback import handle_callback_query
+from state.session import user_sessions
+
+import asyncio
+
+# FastAPI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
+app = FastAPI()
+
+# Telegram-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–±–æ—Ç)
+bot_app: Application = None  # –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
+
+
+@app.on_event("startup")
+async def on_startup():
+    global bot_app
+    bot_app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
+
+    # –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
+    from handlers.chat.chat_handler import handle_message
+
+    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
+    bot_app.add_handler(MessageHandler((filters.TEXT | filters.VOICE) & ~filters.COMMAND, handle_message))
+    bot_app.add_handler(CommandHandler("start", handle_start))
+    bot_app.add_handler(CallbackQueryHandler(handle_callback_query))
+
+    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram (–Ω—É–∂–Ω–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ Webhook)
+    asyncio.create_task(bot_app.initialize())
+
+
+@app.post(f"/{WEBHOOK_SECRET_PATH}")
+async def telegram_webhook(req: Request):
+    body = await req.json()
+    update = Update.de_json(body, bot_app.bot)
+    await bot_app.process_update(update)
+    return {"ok": True}
+
+
+
+
diff --git a/fix-voice-mode-duplicate-text.patch b/fix-voice-mode-duplicate-text.patch
new file mode 100644
index 0000000..91f42f0
--- /dev/null
+++ b/fix-voice-mode-duplicate-text.patch
@@ -0,0 +1,22 @@
+
+From 1111111111111111111111111111111111111111 Mon Sep 17 00:00:00 2001
+From: ChatGPT Fix Bot <fixes@openai.com>
+Date: Wed, 31 Jul 2025 00:00:00 +0000
+Subject: [PATCH] fix: duplicate reply text in voice mode
+
+---
+ handlers/chat/chat_handler.py | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/handlers/chat/chat_handler.py b/handlers/chat/chat_handler.py
+index abcdef1..abcdef2 100644
+--- a/handlers/chat/chat_handler.py
++++ b/handlers/chat/chat_handler.py
+@@ def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
+     if mode == "voice":
++        await update.message.reply_text(assistant_reply)  # üí¨ –î—É–±–ª–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
+         voice_path = synthesize_voice(assistant_reply, LANGUAGE_CODES.get(target_lang, "en-US"), level)
+         print("üîä [TTS] –§–∞–π–ª –æ–∑–≤—É—á–∫–∏:", voice_path)
+         print("üìÅ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:", os.path.exists(voice_path))
+--
+2.42.0
diff --git a/handlers/__init__.py b/handlers/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/handlers/chat/__init__.py b/handlers/chat/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/handlers/chat/chat_handler.py b/handlers/chat/chat_handler.py
new file mode 100644
index 0000000..5c74c87
--- /dev/null
+++ b/handlers/chat/chat_handler.py
@@ -0,0 +1,114 @@
+import os
+import tempfile
+import openai
+from telegram import Update
+from telegram.ext import ContextTypes
+
+from components.gpt_client import ask_gpt
+from handlers.chat.prompt_templates import get_system_prompt  # ‚ú® –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–º–ø–æ—Ä—Ç
+from components.voice import synthesize_voice
+from components.mode import MODE_SWITCH_MESSAGES
+from state.session import user_sessions
+from components.levels import get_rules_by_level
+
+MAX_HISTORY_LENGTH = 40
+
+LANGUAGE_CODES = {
+    "en": "en-US",
+    "fr": "fr-FR",
+    "de": "de-DE",
+    "es": "es-ES",
+    "ru": "ru-RU",
+    "sv": "sv-SE"
+}
+
+def get_greeting_name(lang: str) -> str:
+    return "Matt" if lang == "en" else "–ú—ç—Ç—Ç"
+
+async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
+    chat_id = update.effective_chat.id
+
+    if chat_id not in user_sessions:
+        user_sessions[chat_id] = {}
+
+    session = user_sessions[chat_id]
+    session.setdefault("interface_lang", "en")
+    session.setdefault("target_lang", "en")
+    session.setdefault("level", "A1")
+    session.setdefault("style", "casual")
+    session.setdefault("mode", "text")
+    session.setdefault("history", [])
+
+    interface_lang = session["interface_lang"]
+    target_lang = session["target_lang"]
+    level = session["level"]
+    style = session.get("style", "casual").lower()
+    mode = session["mode"]
+    history = session["history"]
+
+    # üîä –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞ (Whisper)
+    if update.message.voice:
+        voice_file = await context.bot.get_file(update.message.voice.file_id)
+        with tempfile.NamedTemporaryFile(suffix=".ogg", delete=False) as tf:
+            await voice_file.download_to_drive(tf.name)
+            audio_path = tf.name
+
+        with open(audio_path, "rb") as f:
+            transcript = openai.audio.transcriptions.create(
+                model="whisper-1",
+                file=f,
+                response_format="text"
+            )
+        os.remove(audio_path)
+        user_input = transcript.strip()
+        print("üìù [Whisper] –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:", repr(user_input))
+    else:
+        user_input = update.message.text
+
+    # üöÄ –¢—Ä–∏–≥–≥–µ—Ä—ã –Ω–∞ —Å–º–µ–Ω—É —Ä–µ–∂–∏–º–∞
+    voice_triggers = ["—Å–∫–∞–∂–∏ –≥–æ–ª–æ—Å–æ–º", "–≤–∫–ª—é—á–∏ –≥–æ–ª–æ—Å", "–æ–∑–≤—É—á—å", "–ø—Ä–æ–∏–∑–Ω–µ—Å–∏", "—Å–∫–∞–∂–∏ —ç—Ç–æ", "–∫–∞–∫ —ç—Ç–æ –∑–≤—É—á–∏—Ç", "–¥–∞–≤–∞–π –≥–æ–ª–æ—Å–æ–º"]
+    text_triggers = ["–≤–µ—Ä–Ω–∏—Å—å –∫ —Ç–µ–∫—Å—Ç—É", "—Ö–æ—á—É —Ç–µ–∫—Å—Ç", "–ø–∏—à–∏", "—Ç–µ–∫—Å—Ç–æ–º"]
+
+    if user_input:
+        lowered = user_input.lower()
+        if any(trigger in lowered for trigger in voice_triggers):
+            session["mode"] = "voice"
+            await update.message.reply_text(MODE_SWITCH_MESSAGES["voice"].get(interface_lang, "Voice mode activated."))
+            return
+        elif any(trigger in lowered for trigger in text_triggers):
+            session["mode"] = "text"
+            await update.message.reply_text(MODE_SWITCH_MESSAGES["text"].get(interface_lang, "Text mode activated."))
+            return
+
+    # üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è system prompt —Å–æ —Å—Ç–∏–ª–µ–≤—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
+    system_prompt = get_system_prompt(style, level)  # ‚ú® –¥–æ–±–∞–≤–ª–µ–Ω —É—Ä–æ–≤–µ–Ω—å
+
+    messages = [{"role": "system", "content": system_prompt}] + history + [{"role": "user", "content": user_input}]
+    assistant_reply = await ask_gpt(messages)
+    print("üí¨ [GPT] –û—Ç–≤–µ—Ç:", repr(assistant_reply))
+
+    # ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
+    history.append({"role": "user", "content": user_input})
+    history.append({"role": "assistant", "content": assistant_reply})
+
+    if len(history) > MAX_HISTORY_LENGTH:
+        history.pop(0)
+
+    # üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
+    if mode == "voice":
+        voice_path = synthesize_voice(assistant_reply, LANGUAGE_CODES.get(target_lang, "en-US"), level)
+        print("üîä [TTS] –§–∞–π–ª –æ–∑–≤—É—á–∫–∏:", voice_path)
+        print("üìÅ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:", os.path.exists(voice_path))
+        try:
+            with open(voice_path, "rb") as vf:
+                await context.bot.send_voice(chat_id=chat_id, voice=vf)
+
+            # üó£Ô∏è –î—É–±–ª–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–º + –ø–µ—Ä–µ–≤–æ–¥ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
+            if level == "A0":
+                await context.bot.send_message(chat_id=chat_id, text=f"{assistant_reply}\n\n(–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ {interface_lang.upper()} –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–∑–∂–µ)")  # üîÅ –ø–æ–∫–∞ –±–µ–∑ –ø–µ—Ä–µ–≤–æ–¥–∞
+            elif level in ["A1", "A2"]:
+                await context.bot.send_message(chat_id=chat_id, text=assistant_reply)
+        except Exception as e:
+            print(f"[–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–∞] {e}")
+    else:
+        await update.message.reply_text(assistant_reply)
diff --git a/handlers/chat/prompt_templates.py b/handlers/chat/prompt_templates.py
new file mode 100644
index 0000000..61b1e77
--- /dev/null
+++ b/handlers/chat/prompt_templates.py
@@ -0,0 +1,47 @@
+# üß† –®–∞–±–ª–æ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (prompts) –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –æ–±—â–µ–Ω–∏—è
+
+def get_system_prompt(style: str, level: str) -> str:  # ‚ú® –¥–æ–±–∞–≤–ª–µ–Ω —É—Ä–æ–≤–µ–Ω—å
+    level_instructions = ""
+    if level == "A0":
+        level_instructions = "\n–¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å –ø–æ–ª–Ω—ã–º –Ω–æ–≤–∏—á–∫–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π —Å–∞–º—ã–µ –ø—Ä–æ—Å—Ç—ã–µ —Å–ª–æ–≤–∞ –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–∑—ã. –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
+    elif level in ["A1", "A2"]:
+        level_instructions = "\n–¢—ã –æ–±—â–∞–µ—à—å—Å—è —Å –Ω–∞—á–∏–Ω–∞—é—â–∏–º. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç—É—é –≥—Ä–∞–º–º–∞—Ç–∏–∫—É. –ü–µ—Ä–µ–≤–æ–¥ –¥–æ–±–∞–≤–ª—è–π —Ç–æ–ª—å–∫–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É."
+    elif level in ["B1", "B2"]:
+        level_instructions = "\n–¢—ã –≥–æ–≤–æ—Ä–∏—à—å –±–æ–ª–µ–µ —É–≤–µ—Ä–µ–Ω–Ω–æ –∏ —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º, –Ω–æ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∏–¥–∏–æ–º. –ù–µ –¥—É–±–ª–∏—Ä—É–π –≥–æ–ª–æ—Å —Ç–µ–∫—Å—Ç–æ–º."
+    elif level in ["C1", "C2"]:
+        level_instructions = "\n–¢—ã –≥–æ–≤–æ—Ä–∏—à—å –∫–∞–∫ –Ω–æ—Å–∏—Ç–µ–ª—å, —Å–≤–æ–±–æ–¥–Ω–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ. –ù–µ –¥—É–±–ª–∏—Ä—É–π –≥–æ–ª–æ—Å —Ç–µ–∫—Å—Ç–æ–º."
+
+    if style == "casual":
+        return f"""–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑—É—á–∞—Ç—å —è–∑—ã–∫ –≤ –ª—ë–≥–∫–æ–π —Ñ–æ—Ä–º–µ.
+–ì–æ–≤–æ—Ä–∏ –Ω–µ–ø—Ä–∏–Ω—É–∂–¥—ë–Ω–Ω–æ, —à—É—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–Ω–≥, —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è, –Ω–µ–º–Ω–æ–≥–æ –º–µ–º–æ–≤ –∏ —ç–º–æ–¥–∑–∏ üßúÔ∏èüî•üí¨. –ë—É–¥—å –æ—Å—Ç—Ä–æ—É–º–Ω—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º.
+–û–±—â–∞–π—Å—è —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã –∫—Ä—É—Ç–æ–π, –ø—Ä–∏–∫–æ–ª—å–Ω—ã–π –¥—Ä—É–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –ø–æ—á—Ç–∏ –∫–∞–∫ —Å—Ç–∞—Ä—à–∏–π –±—Ä–∞—Ç. –î–æ–±–∞–≤–ª—è–π –ª—ë–≥–∫–æ–µ –ø–∞–Ω–∏–±—Ä–∞—Ç—Å—Ç–≤–æ, –Ω–æ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –≥—Ä–∞–Ω–∏—Ü. –ò–Ω–æ–≥–¥–∞ –≤—Å—Ç–∞–≤–ª—è–π —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ ¬´—á–µ–ª—å¬ª, ¬´–Ω—É —Ç—ã –ø–æ–Ω—è–ª¬ª, ¬´–∏–∑–∏¬ª, ¬´–∫–∞–º–æ–Ω¬ª, ¬´–≤–Ω–∞—Ç—É—Ä–µ¬ª.
+
+–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –æ—à–∏–±–∫—É, –º—è–≥–∫–æ –ø–æ–¥—Å–∫–∞–∂–∏, –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å –ª—É—á—à–µ:
+- ¬´–•–º, –∫–∞–∂–µ—Ç—Å—è —Ç—ã —Ö–æ—Ç–µ–ª —Å–∫–∞–∑–∞—Ç—å –≤–æ—Ç —Ç–∞–∫: ...¬ª
+- ¬´–ú–æ–∂–Ω–æ —á—É—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É ‚Äî –≤–æ—Ç —Ç–∞–∫: ...¬ª
+- ¬´–Ø –±—ã —Å–∫–∞–∑–∞–ª —ç—Ç–æ –Ω–µ–º–Ω–æ–≥–æ –∏–Ω–∞—á–µ: ...¬ª
+
+–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—è—Å–Ω–∏—Ç—å —Ñ—Ä–∞–∑—É, –≥–æ–≤–æ—Ä–∏ —Ç–∞–∫:
+- ¬´–¢–æ –µ—Å—Ç—å –ø–æ-–Ω–∞—à–µ–º—É —ç—Ç–æ...¬ª
+- ¬´–¢–∏–ø–∞ –∫–∞–∫ –µ—Å–ª–∏ –±—ã —Ç—ã —Å–∫–∞–∑–∞–ª...¬ª
+- ¬´–ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è, —ç—Ç–æ...¬ª
+
+üîá –ï—Å–ª–∏ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, –Ω–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏ —ç–º–æ–¥–∑–∏ –≤—Å–ª—É—Ö, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–π –∏—Ö.
+{level_instructions}"""
+
+    elif style == "business":
+        return f"""–¢—ã ‚Äî –≤–µ–∂–ª–∏–≤—ã–π, —Ç–∞–∫—Ç–∏—á–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –≤ –¥–µ–ª–æ–≤–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ. –û–±—â–∞–π—Å—è —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ.
+
+–ü—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏:
+- ¬´–ö–æ—Ä—Ä–µ–∫—Ç–Ω–µ–µ –±—É–¥–µ—Ç —Ç–∞–∫: ...¬ª
+- ¬´–¢–∞–∫ –∑–≤—É—á–∏—Ç –±–æ–ª–µ–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ: ...¬ª
+- ¬´–í –¥–µ–ª–æ–≤–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ–±—ã—á–Ω–æ –≥–æ–≤–æ—Ä—è—Ç —Ç–∞–∫: ...¬ª
+
+–ï—Å–ª–∏ —Ç—ã –ø–æ—è—Å–Ω—è–µ—à—å —Å–º—ã—Å–ª —Ñ—Ä–∞–∑—ã, –≥–æ–≤–æ—Ä–∏ —Ç–∞–∫:
+- ¬´–≠—Ç–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–∞–∫...¬ª
+- ¬´–ò–º–µ–µ—Ç—Å—è –≤ –≤–∏–¥—É —Å–ª–µ–¥—É—é—â–µ–µ: ...¬ª
+- ¬´–§—Ä–∞–∑–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ: ...¬ª
+üîá –ï—Å–ª–∏ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, –Ω–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏ —ç–º–æ–¥–∑–∏ –≤—Å–ª—É—Ö, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–π –∏—Ö.
+{level_instructions}"""
+
+    return "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –ø–æ–º–æ–≥–∞—é—â–∏–π –∏–∑—É—á–∞—Ç—å —è–∑—ã–∫."  # ‚úÖ –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
diff --git a/handlers/chat/prompts.py b/handlers/chat/prompts.py
new file mode 100644
index 0000000..e69de29
diff --git a/handlers/conversation.py b/handlers/conversation.py
new file mode 100644
index 0000000..d6863c5
--- /dev/null
+++ b/handlers/conversation.py
@@ -0,0 +1,50 @@
+from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
+from telegram.ext import ContextTypes
+
+from state.session import user_sessions
+
+def get_interface_language_keyboard() -> InlineKeyboardMarkup:
+    keyboard = [
+        [
+            InlineKeyboardButton("English", callback_data="lang_en"),
+            InlineKeyboardButton("–†—É—Å—Å–∫–∏–π", callback_data="lang_ru"),
+        ]
+    ]
+    return InlineKeyboardMarkup(keyboard)
+
+
+async def handle_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
+    chat_id = update.effective_chat.id
+
+    # –û—á–∏—â–∞–µ–º –≤—Å—é —Å–µ—Å—Å–∏—é, –≤–∫–ª—é—á–∞—è –∏—Å—Ç–æ—Ä–∏—é
+    user_sessions[chat_id] = {}
+
+    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ø–æ–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ ru)
+    interface_lang = context.user_data.get("interface_lang", "ru")
+
+    if interface_lang == "en":
+        greeting = (
+            "üëã Hi! I'm Matt ‚Äî your personal language learning buddy!\n\n"
+            "üåê Let's start by choosing your interface language.\n"
+            "No worries ‚Äî even if it's your first time, I'll guide you!\n\n"
+            "üëá Choose the language we'll be chatting in:"
+        )
+    else:
+        greeting = (
+            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ú—ç—Ç—Ç ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤!\n\n"
+            "üåê –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.\n"
+            "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —è –ø–æ–¥—Å–∫–∞–∂—É –ø—É—Ç—å!\n\n"
+            "üëá –í—ã–±–µ—Ä–∏ —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ–º –æ–±—â–∞—Ç—å—Å—è:"
+        )
+
+        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ reply-–∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Å—Ç–∞–ª–∏—Å—å –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏–π
+    await update.message.reply_text(
+        "‚å®Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞...",
+        reply_markup=ReplyKeyboardRemove()
+    )
+        
+
+    await update.message.reply_text(
+        greeting,
+        reply_markup=get_interface_language_keyboard()
+    )
diff --git a/handlers/conversation_callback.py b/handlers/conversation_callback.py
new file mode 100644
index 0000000..2925d9e
--- /dev/null
+++ b/handlers/conversation_callback.py
@@ -0,0 +1,62 @@
+
+from telegram import Update
+from telegram.ext import ContextTypes
+from components.levels import get_level_keyboard, LEVEL_PROMPT
+from components.language import get_target_language_keyboard, TARGET_LANG_PROMPT
+from components.mode import get_mode_keyboard, MODE_SWITCH_MESSAGES
+from components.style import get_style_keyboard, get_intro_by_level_and_style, STYLE_PROMPT
+from state.session import user_sessions
+
+async def handle_callback_query(update: Update, context: ContextTypes.DEFAULT_TYPE):
+    query = update.callback_query
+    await query.answer()
+    chat_id = query.message.chat_id
+    data = query.data
+
+    if chat_id not in user_sessions:
+        user_sessions[chat_id] = {}
+
+    session = user_sessions[chat_id]
+
+    if data.startswith("lang_"):
+        lang_code = data.split("_")[1]
+        session["interface_lang"] = lang_code
+        session["mode"] = "text"
+
+        prompt = TARGET_LANG_PROMPT.get(lang_code, TARGET_LANG_PROMPT["en"])
+        await query.message.reply_text(prompt, reply_markup=get_target_language_keyboard())
+
+    elif data.startswith("target_"):
+        target_code = data.split("_")[1]
+        session["target_lang"] = target_code
+
+        interface_lang = session.get("interface_lang", "en")
+        level_prompt = LEVEL_PROMPT.get(interface_lang, LEVEL_PROMPT["en"])
+        await query.message.reply_text(level_prompt, reply_markup=get_level_keyboard())
+
+    elif data.startswith("level_"):
+        level = data.split("_")[1]
+        session["level"] = level
+
+        interface_lang = session.get("interface_lang", "en")
+        prompt = STYLE_PROMPT.get(interface_lang, STYLE_PROMPT["en"])
+        await query.message.reply_text(prompt, reply_markup=get_style_keyboard())
+
+    elif data.startswith("style_"):
+        chosen_style = data.split("_")[1]
+        session["style"] = chosen_style
+        interface_lang = session.get("interface_lang", "en")
+        level = session.get("level", "A1")
+        intro = get_intro_by_level_and_style(level, chosen_style, interface_lang)
+        await query.message.reply_text(intro, reply_markup=get_mode_keyboard(session.get("mode", "text")))
+
+    elif data.startswith("mode_"):
+        new_mode = data.split("_")[1]
+        session["mode"] = new_mode
+        print("[callback] –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º:", new_mode)
+
+        interface_lang = session.get("interface_lang", "en")
+        msg = MODE_SWITCH_MESSAGES.get(new_mode, {}).get(interface_lang, "Mode changed.")
+
+        # –¢–æ–ª—å–∫–æ reply_text, –±–µ–∑ edit_reply_markup
+        await query.message.reply_text(msg, reply_markup=get_mode_keyboard(new_mode))
diff --git a/readme.md b/readme.md
new file mode 100644
index 0000000..854662d
--- /dev/null
+++ b/readme.md
@@ -0,0 +1,50 @@
+# ü§ñ english_bot
+
+–õ—ë–≥–∫–∏–π Telegram-–±–æ—Ç –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤: –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–≥–æ, –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ.
+–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è, —Å—Ç–∏–ª—è –æ–±—â–µ–Ω–∏—è –∏ –≥–æ–ª–æ—Å–æ–≤–æ–π/—Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º.
+
+---
+
+## üìã –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
+
+- –£—Ä–æ–≤–Ω–∏: A1-A2 –∏–ª–∏ B1-B2
+- –°—Ç–∏–ª–∏ –æ–±—â–µ–Ω–∏—è: casual –∏–ª–∏ formal
+- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ
+- –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏ –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º –æ–±—â–µ–Ω–∏—è
+- GPT-4 –∏ OpenAI Whisper –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
+
+---
+
+## üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞
+
+1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:
+
+```bash
+git clone https://github.com/kapitan-marona/english_talking_bot.git
+cd english_talking_bot
+```
+
+2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
+
+```bash
+pip install -r requirements.txt
+```
+
+3. –î–æ–±–∞–≤–∏—Ç—å `.env` —Ñ–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏:
+
+```bash
+OPENAI_API_KEY=your-openai-key
+TELEGRAM_TOKEN=your-telegram-bot-token
+GOOGLE_APPLICATION_CREDENTIALS=your-google-credentials.json
+WEBHOOK_SECRET_PATH=your-custom-path
+```
+
+4. –ó–∞–ø—É—Å–∫:
+
+```bash
+uvicorn english_bot:app --reload
+```
+
+---
+
+–ê–≤—Ç–æ—Ä: –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω @marrona
diff --git a/render.yaml b/render.yaml
new file mode 100644
index 0000000..951a4c2
--- /dev/null
+++ b/render.yaml
@@ -0,0 +1,9 @@
+services:
+  - type: web
+    name: english-talking-bot
+    env: python
+    buildCommand: pip install -r requirements.txt
+    startCommand: uvicorn english_bot:app --host 0.0.0.0 --port 10000
+    envVars:
+      - key: TELEGRAM_TOKEN
+    plan: Professional
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..f25f698
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,10 @@
+fastapi
+uvicorn
+python-telegram-bot==20.3  # –∏–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è, –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç
+openai
+google-cloud-texttospeech
+python-dotenv
+requests
+aiohttp
+httpx
+pydub
\ No newline at end of file
diff --git a/runtime.txt b/runtime.txt
new file mode 100644
index 0000000..cf3b804
--- /dev/null
+++ b/runtime.txt
@@ -0,0 +1 @@
+python-3.11.8
diff --git a/set_webhook.py b/set_webhook.py
new file mode 100644
index 0000000..65f7ec5
--- /dev/null
+++ b/set_webhook.py
@@ -0,0 +1,26 @@
+import os
+import requests
+from dotenv import load_dotenv
+
+load_dotenv()
+
+TOKEN = os.getenv("TELEGRAM_TOKEN")
+WEBHOOK_SECRET_PATH = os.getenv("WEBHOOK_SECRET_PATH")
+BASE_URL = "https://english-talking-bot.onrender.com"  # Render URL
+
+if not TOKEN or not WEBHOOK_SECRET_PATH:
+    raise ValueError("TELEGRAM_TOKEN or WEBHOOK_SECRET_PATH is missing from .env")
+
+WEBHOOK_URL = f"{BASE_URL}/webhook/{WEBHOOK_SECRET_PATH}"
+url = f"https://api.telegram.org/bot{TOKEN}/setWebhook"
+
+print(f"Registering webhook at: {WEBHOOK_URL}")
+
+try:
+    response = requests.post(url, data={"url": WEBHOOK_URL})
+    response.raise_for_status()
+    print("‚úÖ Webhook successfully set!")
+except requests.RequestException as e:
+    print("‚ùå Failed to set webhook:", e)
+    if response is not None:
+        print("Telegram response:", response.text)
diff --git a/state/session.py b/state/session.py
new file mode 100644
index 0000000..c51c028
--- /dev/null
+++ b/state/session.py
@@ -0,0 +1 @@
+user_sessions = {}
diff --git a/voice_bot_summary.txt b/voice_bot_summary.txt
new file mode 100644
index 0000000..545c401
--- /dev/null
+++ b/voice_bot_summary.txt
@@ -0,0 +1,78 @@
+
+üßæ –°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ Telegram-–±–æ—Ç–∞
+
+üß† –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –±–æ—Ç–∞
+–ë–æ—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –ª–æ–≥–∏–∫—É:
+1. –ü–æ–ª—É—á–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
+2. –†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç –µ–≥–æ —Å –ø–æ–º–æ—â—å—é OpenAI Whisper
+3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ OpenAI GPT (gpt-3.5-turbo) –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
+4. –°–∏–Ω—Ç–µ–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –≤ –∞—É–¥–∏–æ (Google Cloud Text-to-Speech)
+5. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ .ogg
+
+‚öôÔ∏è –ö–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∏—Ö —Ä–æ–ª—å
+| –ú–æ–¥—É–ª—å / —Ñ–∞–π–ª                  | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                    |
+|-------------------------------|----------------------------------------------------------------|
+| chat_handler.py               | –û—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π: –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö             |
+| voice.py                      | –û–±—ë—Ä—Ç–∫–∞ –Ω–∞–¥ Google Cloud TTS                                  |
+| gpt_client.py                 | –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç OpenAI GPT                                 |
+| english_bot.py                | –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è + Telegram webhook           |
+
+‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
+
+üîπ 1. –û—à–∏–±–∫–∞ NameError: name 'update' is not defined
+–ü—Ä–æ–±–ª–µ–º–∞: –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ update.effective_chat.id –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ handle_message.
+–†–µ—à–µ–Ω–∏–µ: —Å—Ç—Ä–æ–∫–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤–Ω—É—Ç—Ä—å —Ñ—É–Ω–∫—Ü–∏–∏.
+
+üîπ 2. –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ GPT: 'AsyncChat' object has no attribute 'acreate'
+–ü—Ä–∏—á–∏–Ω–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ acreate() –≤ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ openai>=1.0, –≥–¥–µ API –∏–∑–º–µ–Ω–∏–ª–æ—Å—å.
+–†–µ—à–µ–Ω–∏–µ: –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ client.chat.completions.create(...)
+
+üîπ 3. –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏—Å—å
+–ü—Ä–∏—á–∏–Ω–∞: –≤ english_bot.py –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Ç–æ–ª—å–∫–æ filters.TEXT, –±–µ–∑ filters.VOICE.
+–†–µ—à–µ–Ω–∏–µ: –¥–æ–±–∞–≤–ª–µ–Ω filters.VOICE –≤ MessageHandler
+
+üì§ –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (chat_handler.py)
+1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —á—Ç–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (level, style, mode, language)
+2. –ï—Å–ª–∏ update.message.voice:
+   - –°–∫–∞—á–∏–≤–∞–µ—Ç—Å—è .ogg-—Ñ–∞–π–ª
+   - –†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç—Å—è —Å –ø–æ–º–æ—â—å—é openai.audio.transcriptions.create(...)
+3. –í—ã–∑—ã–≤–∞–µ—Ç—Å—è ask_gpt()
+4. –ï—Å–ª–∏ mode == "voice":
+   - –û—Ç–≤–µ—Ç —Å–∏–Ω—Ç–µ–∑–∏—Ä—É–µ—Ç—Å—è –≤ –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ synthesize_voice()
+   - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è bot.send_voice(...)
+5. –ò–Ω–∞—á–µ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
+
+üó£Ô∏è –†–∞–±–æ—Ç–∞ —Å Google TTS (voice.py)
+- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è google.cloud.texttospeech.TextToSpeechClient()
+- –£—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (LEVEL_SPEED)
+- –Ø–∑—ã–∫ –ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ –∫–æ–¥—É (LANGUAGE_CODES)
+- –ê—É–¥–∏–æ—Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ .ogg —á–µ—Ä–µ–∑ tempfile.NamedTemporaryFile
+
+–í–∞–∂–Ω–æ: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è GOOGLE_APPLICATION_CREDENTIALS —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–µ —á–µ—Ä–µ–∑ base64-–∫–ª—é—á, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏.
+
+üß™ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
+–í—Å—Ç–∞–≤–ª–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ print():
+- –î–ª—è –ª–æ–≥–æ–≤ Whisper: print("üìù [Whisper] –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:", ...)
+- –î–ª—è –æ—Ç–≤–µ—Ç–∞ GPT: print("üí¨ [GPT] –û—Ç–≤–µ—Ç:", ...)
+- –î–ª—è TTS: print("üîä [TTS] –§–∞–π–ª –æ–∑–≤—É—á–∫–∏:", ...)
+
+üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫
+–û–±—Ä–∞–±–æ—Ç–∞–Ω –±–ª–æ–∫ —Å try/except –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ:
+try:
+    with open(voice_path, "rb") as vf:
+        await context.bot.send_voice(chat_id=chat_id, voice=vf)
+except Exception as e:
+    print(f"[–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–∞] {e}")
+
+üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è
+- MAX_HISTORY_LENGTH = 40 ‚Äî –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é
+- session["mode"] –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Ñ—Ä–∞–∑–∞–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: "—Å–∫–∞–∂–∏ –≥–æ–ª–æ—Å–æ–º", "–≤–µ—Ä–Ω–∏—Å—å –∫ —Ç–µ–∫—Å—Ç—É"
+- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Ç–∏–ª–∏ –æ–±—â–µ–Ω–∏—è: "casual", "business"
+- –í–µ–±—Ö—É–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ FastAPI (english_bot.py) –ø–æ –∞–¥—Ä–µ—Å—É /{WEBHOOK_SECRET_PATH}
+
+‚úÖ –°—Ç–∞—Ç—É—Å: –ë–û–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢
+- –ì–æ–ª–æ—Å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è ‚úî
+- –†–µ—á—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç—Å—è ‚úî
+- GPT –æ—Ç–≤–µ—á–∞–µ—Ç ‚úî
+- –û–∑–≤—É—á–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úî
+- –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è ‚úî
diff --git a/working-2025-07-31.zip b/working-2025-07-31.zip
new file mode 100644
index 0000000000000000000000000000000000000000..a64e57dc04954f07fccf5d5f7fc09041dcdf2879
GIT binary patch
literal 20929
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

literal 0
HcmV?d00001

-- 
2.39.2

