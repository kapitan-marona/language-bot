"""# üá¨üáß English Talking Bot

> –ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π Telegram-–±–æ—Ç –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –≤ —Ç–µ–∫—Å—Ç–µ –∏ –≥–æ–ª–æ—Å–µ ‚Äî —Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–æ–º, –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏, –ø–æ–¥–ø–∏—Å–∫–æ–π —á–µ—Ä–µ–∑ Stars –∏ —Ä–µ–∂–∏–º–æ–º –æ–±—É—á–µ–Ω–∏—è (teach).

![Python](https://img.shields.io/badge/Python-3.11%2B-blue)
![FastAPI](https://img.shields.io/badge/FastAPI-Backend-success)
![Telegram](https://img.shields.io/badge/Telegram-Bot-blue)
![License](https://img.shields.io/badge/License-MIT-green)

---

## ‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- üí¨ **–î–∏–∞–ª–æ–≥ —Å –ò–ò** ‚Äî —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –≥–æ–ª–æ—Å–æ–º (TTS/ASR —á–µ—Ä–µ–∑ OpenAI)
- üéô **–ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º** ‚Äî –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –≥–æ–ª–æ—Å–æ–º, –º–æ–∂–Ω–æ ¬´–æ–∑–≤—É—á–∏—Ç—å¬ª —Ä–µ–ø–ª–∏–∫—É
- üÜï **–û–Ω–±–æ—Ä–¥–∏–Ω–≥** ‚Äî –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, —Ü–µ–ª–µ–≤–æ–≥–æ —è–∑—ã–∫–∞/—É—Ä–æ–≤–Ω—è/—Å—Ç–∏–ª—è
- üí≥ **–ü–æ–¥–ø–∏—Å–∫–∞** —á–µ—Ä–µ–∑ **Telegram Stars** (XTR) + —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ
- üéü **–ü—Ä–æ–º–æ–∫–æ–¥—ã** ‚Äî —Å–Ω–∏–º–∞—é—Ç –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –¥–µ–Ω—å
- üìö **–†–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è** `/teach` ‚Äî –¥–æ–±–∞–≤–ª—è–π —Å–≤–æ–∏ –ø–∞—Ä—ã ¬´—Ñ—Ä–∞–∑–∞ ‚Äî –ø–µ—Ä–µ–≤–æ–¥¬ª
- ‚è∏ **–ü–∞—É–∑–∞ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ –≤—Ä–µ–º—è /teach** + –∫–Ω–æ–ø–∫–∞ **‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å**
- üìä **–õ–∏–º–∏—Ç** –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 15/–¥–µ–Ω—å) + –º—è–≥–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
- ‚öô **–ù–∞—Å—Ç—Ä–æ–π–∫–∏**: —è–∑—ã–∫/—É—Ä–æ–≤–Ω—è/—Å—Ç–∏–ª—å ‚Äî –∫–Ω–æ–ø–∫–∏ –∏ –∫–æ–º–∞–Ω–¥—ã `/language`, `/level`, `/style`
- üß† **–ú—è–≥–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—à–∏–±–æ–∫** ‚Äî —Å—Ç–∏–ª—å/—É—Ä–æ–≤–µ–Ω—å-aware, –±–µ–∑ —Ç–µ—Ä–º–∏–Ω–æ–≤
- üåç **i18n** ‚Äî –µ–¥–∏–Ω—ã–π —Ä–µ–∑–æ–ª–≤–µ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, —à–æ—Ä—Ç–∫–æ–¥—ã —è–∑—ã–∫–æ–≤ `/codes`
- üõ† **–õ—ë–≥–∫–∞—è —Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å** ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É/—Ä–µ–∂–∏–º –∑–∞ –º–∏–Ω—É—Ç—ã

---

## üèó –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ (–≤ –¥–≤—É—Ö —Å–ª–æ–≤–∞—Ö)

- **FastAPI** –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–µ–±—Ö—É–∫ Telegram ‚Üí `english_bot.py`.
- –ê–ø–¥–µ–π—Ç—ã –æ—Ç–¥–∞—é—Ç—Å—è –≤ `python-telegram-bot` (**PTB v20+**) ‚Äî **–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ** —á–µ—Ä–µ–∑ `asyncio.create_task`, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–µ–±—Ö—É–∫.
- –•–µ–Ω–¥–ª–µ—Ä—ã —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø–æ –≥—Ä—É–ø–ø–∞–º:
  - **group=0**: –ø—Ä–æ–º–æ-—Ä–æ—É—Ç–µ—Ä –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ ‚Üí –ª–∏–º–∏—Ç-–≥–µ–π—Ç `usage_gate`
  - **group=1**: ¬´—à–ª—é–∑-–ø–∞—É–∑–∞¬ª `/teach` ‚Üí –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–ª–æ–≥ `handle_message`
- –ü–ª–∞—Ç–µ–∂–∏ **Stars**: –≤—ã—Å—Ç–∞–≤–ª—è–µ–º —Å—á—ë—Ç `send_invoice`, –ª–æ–≤–∏–º `PreCheckoutQuery` –∏ `SUCCESSFUL_PAYMENT`.
- –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ `state.session.user_sessions`, –ø—Ä–æ—Ñ–∏–ª—å/–ª–∏–º–∏—Ç—ã/–≥–ª–æ—Å—Å–∞—Ä–∏–π ‚Äî –≤ –ª—ë–≥–∫–∏—Ö SQLite-—Ç–∞–±–ª–∏—Ü–∞—Ö.

---

## üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫

### 1) –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
git clone https://github.com/username/english-talking-bot.git
cd english-talking-bot
```

### 2) –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
```bash
python -m venv .venv
source .venv/bin/activate    # macOS/Linux
# .venv\Scripts\activate     # Windows (PowerShell)
pip install -r requirements.txt
```

### 3) –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:

```env
# Telegram
TELEGRAM_TOKEN=123456:ABC...           # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
WEBHOOK_SECRET_PATH=Dlzfd1hw_jm76...   # —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –ø—É—Ç—å –≤–µ–±—Ö—É–∫–∞, –ª—é–±–∞—è —Å–ª—É—á–∞–π–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
TELEGRAM_WEBHOOK_SECRET_TOKEN=s3cr3t   # —Å–µ–∫—Ä–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ (–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ)

# –í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
PUBLIC_URL=https://your-domain.tld     # –Ω–∞–ø—Ä–∏–º–µ—Ä: https://english-bot.onrender.com (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è /set_webhook)

# OpenAI
OPENAI_API_KEY=sk-...                  # –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞/–≥–æ–ª–æ—Å–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≥–æ–ª–æ—Å/—á–∞—Ç —á–µ—Ä–µ–∑ OpenAI)
```

> –ü–æ—á–µ–º—É –¥–≤–∞ —Å–µ–∫—Ä–µ—Ç–∞?  
> ‚Ä¢ `WEBHOOK_SECRET_PATH` –ø—Ä—è—á–µ—Ç —Å–∞–º –ø—É—Ç—å (`/{secret}`),  
> ‚Ä¢ `TELEGRAM_WEBHOOK_SECRET_TOKEN` ‚Äî –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ `X-Telegram-Bot-Api-Secret-Token`.  
> –í–º–µ—Å—Ç–µ –æ–Ω–∏ –Ω–∞–¥—ë–∂–Ω–æ –∑–∞–∫—Ä—ã–≤–∞—é—Ç –≤–∞—à –≤–µ–±—Ö—É–∫.

### 4) –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
```bash
uvicorn english_bot:app --host 0.0.0.0 --port 8000 --reload
```

–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–µ–±—Ö—É–∫ (–±–æ—Ç –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –≤–∞—à –ø—É–±–ª–∏—á–Ω—ã–π –∞–¥—Ä–µ—Å). –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ–º–µ–Ω–∞, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ngrok/Cloudflare Tunnel:

```bash
# –ü—Ä–∏–º–µ—Ä (–µ—Å–ª–∏ PUBLIC_URL —É–∂–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–∞—à —Ç—É–Ω–Ω–µ–ª—å)
curl "http://localhost:8000/set_webhook"
```

–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è:
```bash
curl "http://localhost:8000/healthz"
# {"ok": true}
```

---

## ‚òÅ –î–µ–ø–ª–æ–π –Ω–∞ Render

### –í–∞—Ä–∏–∞–Ω—Ç 1. –ß–µ—Ä–µ–∑ Dashboard
1. **New ‚Üí Web Service** ‚Üí –ø–æ–¥–∫–ª—é—á–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.
2. Runtime: **Python 3.11+**.
3. Build Command:
   ```bash
   pip install -r requirements.txt
   ```
4. Start Command (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å `$PORT`):
   ```bash
   uvicorn english_bot:app --host 0.0.0.0 --port $PORT
   ```
5. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ `.env` –≤ **Environment**.
6. –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:
   ```
   https://<your-service>.onrender.com/set_webhook
   ```

### –í–∞—Ä–∏–∞–Ω—Ç 2. –ß–µ—Ä–µ–∑ `render.yaml`
```yaml
services:
  - type: web
    name: english-talking-bot
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn english_bot:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: TELEGRAM_TOKEN
      - key: WEBHOOK_SECRET_PATH
      - key: PUBLIC_URL
      - key: TELEGRAM_WEBHOOK_SECRET_TOKEN
      - key: OPENAI_API_KEY
    plan: Professional
```

> –°–æ–≤–µ—Ç: –ø–æ–º–µ–Ω—è–π—Ç–µ `PUBLIC_URL` –Ω–∞ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render (https://‚Ä¶onrender.com).  
> –í –ª–æ–≥–∞—Ö –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è `Uvicorn running on http://0.0.0.0:<port>` –∏ `Application started`.

---

## üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
.
‚îú‚îÄ‚îÄ english_bot.py               # FastAPI + Telegram Application + —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
‚îú‚îÄ‚îÄ handlers/
‚îÇ   ‚îú‚îÄ‚îÄ chat/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ chat_handler.py      # –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–ª–æ–≥ —Å –ú—ç—Ç—Ç–æ–º
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ prompt_templates.py  # –ø—Ä–æ–º–ø—Ç—ã/–ø—Ä–∞–≤–∏–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏/–≤–≤–æ–¥–Ω—ã–µ
‚îÇ   ‚îú‚îÄ‚îÄ commands/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ help.py              # /help (–ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ payments.py          # /buy (Stars invoice)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ promo.py             # /promo <code>
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ donate.py            # /donate [amount] + –ø—Ä–µ—Å–µ—Ç—ã
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ language_cmd.py      # /language
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ level_cmd.py         # /level
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ style_cmd.py         # /style
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ consent.py           # /consent, /codes (–ø–æ—è—Å–Ω–µ–Ω–∏–µ –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ teach.py             # /teach (—Ä–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è + –ø–∞—É–∑–∞ –¥–∏–∞–ª–æ–≥–∞)
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ reset.py             # /reset (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ)
‚îÇ   ‚îú‚îÄ‚îÄ callbacks/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ menu.py              # –º–µ–Ω—é/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ how_to_pay_game.py   # –≥–µ–π–º–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –æ–ø–ª–∞—Ç—ã
‚îÇ   ‚îî‚îÄ‚îÄ middleware/
‚îÇ       ‚îî‚îÄ‚îÄ usage_gate.py        # –ª–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π + –ø—Ä–æ–º–æ-–≥–µ–π—Ç
‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îú‚îÄ‚îÄ gpt_client.py            # AsyncOpenAI (—á–∞—Ç/tts)
‚îÇ   ‚îú‚îÄ‚îÄ payments.py              # Stars (invoice/precheckout/success)
‚îÇ   ‚îú‚îÄ‚îÄ onboarding.py            # –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ + promo_code_message
‚îÇ   ‚îú‚îÄ‚îÄ profile_db.py            # –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (SQLite)
‚îÇ   ‚îú‚îÄ‚îÄ usage_db.py              # —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (SQLite)
‚îÇ   ‚îú‚îÄ‚îÄ training_db.py           # –≥–ª–æ—Å—Å–∞—Ä–∏–π teach (SQLite)
‚îÇ   ‚îú‚îÄ‚îÄ i18n.py                  # –µ–¥–∏–Ω—ã–π —Ä–µ–∑–æ–ª–≤–µ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚îÇ   ‚îî‚îÄ‚îÄ lang_codes.py            # —Å–ª–æ–≤–∞—Ä—å ISO-639-1 –¥–ª—è /codes
‚îú‚îÄ‚îÄ state/
‚îÇ   ‚îî‚îÄ‚îÄ session.py               # in-memory —Å–µ—Å—Å–∏–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
‚îú‚îÄ‚îÄ requirements.txt
‚îî‚îÄ‚îÄ README.md
```

> –ë–î ‚Äî –ª—ë–≥–∫–∏–µ SQLite-—Ñ–∞–π–ª—ã, —Å–æ–∑–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ (–≤–Ω–µ—à–Ω—è—è –°–£–ë–î –Ω–µ –Ω—É–∂–Ω–∞).

---

## ‚öôÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∫—Ä–∞—Ç–∫–æ)

| –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ | –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ |
|---|---|---|
| `TELEGRAM_TOKEN` | —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ @BotFather | ‚úÖ |
| `WEBHOOK_SECRET_PATH` | —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –ø—É—Ç—å –≤–µ–±—Ö—É–∫–∞ (`/{secret}`) | ‚úÖ |
| `PUBLIC_URL` | –ø—É–±–ª–∏—á–Ω—ã–π –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–∏—Å–∞ (–¥–ª—è `/set_webhook`) | ‚úÖ |
| `TELEGRAM_WEBHOOK_SECRET_TOKEN` | —Å–µ–∫—Ä–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ | –∂–µ–ª–∞—Ç. |
| `OPENAI_API_KEY` | –∫–ª—é—á OpenAI (—á–∞—Ç/tts) | –ø—Ä–∏ –≥–æ–ª–æ—Å–µ/—á–∞—Ç–µ |

> –õ–∏–º–∏—Ç—ã/–ø–æ—Ä–æ–≥ (`FREE_DAILY_LIMIT=15`, `REMIND_AFTER=10`) –∑–∞–¥–∞–Ω—ã –≤ `usage_gate.py`. –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ ENV.

---

## üí° –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞

| –ö–æ–º–∞–Ω–¥–∞ | –ß—Ç–æ –¥–µ–ª–∞–µ—Ç |
|---|---|
| `/start` | –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ (–≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ‚Üí –ø—Ä–æ–º–æ–∫–æ–¥ ‚Üí –ø—Ä–∏–≤–µ—Ç –æ—Ç –ú—ç—Ç—Ç–∞) |
| `/help` | —Å–ø—Ä–∞–≤–∫–∞, –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –æ–±—â–µ–Ω–∏—é |
| `/settings` | –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞/—É—Ä–æ–≤–Ω—è/—Å—Ç–∏–ª—è (–∫–Ω–æ–ø–∫–∏) |
| `/language`, `/level`, `/style` | –±—ã—Å—Ç—Ä—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ |
| `/buy` | —Å—á—ë—Ç –Ω–∞ 30 –¥–Ω–µ–π (Stars / XTR) |
| `/promo <–∫–æ–¥>` | –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ |
| `/donate [—Å—É–º–º–∞]` | –±—ã—Å—Ç—Ä—ã–π –¥–æ–Ω–∞—Ç –≤ Stars (–∏–ª–∏ –ø—Ä–µ—Å–µ—Ç—ã) |
| `/teach` | —Ä–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è (–ø–∞—Ä—ã ¬´—Ñ—Ä–∞–∑–∞ ‚Äî –ø–µ—Ä–µ–≤–æ–¥¬ª, —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ `/glossary`) |
| `/glossary` | —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–∞—Ä |
| `/consent` / `/codes` | –∏–Ω—Ñ–æ –æ —Ä–µ–∂–∏–º–µ –æ–±—É—á–µ–Ω–∏—è / —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ —è–∑—ã–∫–æ–≤ |
| `/reset` | —Å–±—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º) |

---

## üó£ –ú—è–≥–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—à–∏–±–æ–∫

- –±–æ—Ç **–∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ**, —á—Ç–æ –º–µ—à–∞–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—é (–±–µ–∑ —Ç–µ–æ—Ä–∏–∏/—Ç–µ—Ä–º–∏–Ω–æ–≤);  
- —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å—è—Ç –æ—Ç **—É—Ä–æ–≤–Ω—è** (A0‚ÄìC2) –∏ **—Å—Ç–∏–ª—è** (casual/business);  
- –¥–ª—è A0‚ÄìA2 ‚Äî –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ —è–∑—ã–∫–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞;  
- –ø—Ä–∏ —è–≤–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ ¬´–æ–±—ä—è—Å–Ω–∏ –ø–æ–¥—Ä–æ–±–Ω–æ¬ª ‚Äî –±–æ—Ç—É —Å–Ω–∏–∂–∞–µ—Ç—Å—è temperature –∏ –≤–∫–ª—é—á–∞–µ—Ç—Å—è —Ä–∞–∑—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä.

–ù–∞—Å—Ç—Ä–æ–π–∫–∏/–ø—Ä–∞–≤–∏–ª–∞ —Å–æ–±—Ä–∞–Ω—ã –≤ `handlers/chat/prompt_templates.py`.

---

## üß© –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É

1) –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –≤ `handlers/commands/`:
```python
from telegram import Update
from telegram.ext import ContextTypes

async def my_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –Ω–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞.")
```

2) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –≤ `english_bot.py`:
```python
from handlers.commands.my import my_command
app_.add_handler(CommandHandler("my", my_command))
```

–ì–æ—Ç–æ–≤–æ ‚Äî –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞.

---

## üõ† –û—Ç–ª–∞–¥–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞

- **–í–µ–±—Ö—É–∫**: –æ—Ç–∫—Ä–æ–π—Ç–µ `https://<host>/set_webhook` (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `{"ok": true, "url": ...}`).
- **–•–µ–ª—Å—á–µ–∫–∏**: `GET /healthz` ‚Üí `{"ok": true}`.
- **–õ–æ–≥–∏**: Render ‚Üí –≤–∫–ª–∞–¥–∫–∞ **Logs**; –ª–æ–∫–∞–ª—å–Ω–æ ‚Äî stdout.
- **–ß–∞—Å—Ç—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è**:
  - `Forbidden: bad webhook secret token` ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ `TELEGRAM_WEBHOOK_SECRET_TOKEN` –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –±–æ—Ç–∞ –∏ –≤–µ–±—Ö—É–∫–∞.
  - `Unhandled callback_data` ‚Äî –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏—à–ª–∞ –Ω–µ –Ω–∞ —Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω; –ø—Ä–æ–≤–µ—Ä—å—Ç–µ `pattern` –≤–∞—à–∏—Ö `CallbackQueryHandler`.
- **–ü—Ä–æ–±–ª–µ–º—ã —Å ¬´–Ω–µ—Ç¬ª –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥–µ**: —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∫–ª—é—á—ë–Ω —Ä–æ—É—Ç–µ—Ä `promo_stage_router` (—Å–º. `english_bot.py`, group=0).
- **–ü–∞—É–∑–∞ –≤ /teach**: –µ—Å–ª–∏ –±–æ—Ç ¬´–º–æ–ª—á–∏—Ç¬ª, –Ω–∞–∂–º–∏—Ç–µ **‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å** (—Å–Ω–∏–º–µ—Ç `chat_data["dialog_paused"]`).

---

## üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

- –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `.env` / –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
- –î–µ–ª–∞–π—Ç–µ –¥–ª–∏–Ω–Ω—ã–π —Å–ª—É—á–∞–π–Ω—ã–π `WEBHOOK_SECRET_PATH` –∏ –≤–∫–ª—é—á–∞–π—Ç–µ `TELEGRAM_WEBHOOK_SECRET_TOKEN`.
- –ù–µ –ª–æ–≥–∏—Ä—É–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π/–ø–ª–∞—Ç–µ–∂–µ–π.
- –û–±–Ω–æ–≤–ª—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (`requirements.txt`) —Ä–µ–≥—É–ª—è—Ä–Ω–æ.

---

## ü§ù –í–∫–ª–∞–¥ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞

PR-—ã –∏ –∏–¥–µ–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è!  
–ù–∞—à–ª–∏ –ø—Ä–æ–±–ª–µ–º—É? –û—Ç–∫—Ä–æ–π—Ç–µ **Issue** —Å —à–∞–≥–∞–º–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏ –ª–æ–≥–∞–º–∏ (–±–µ–∑ —Ç–æ–∫–µ–Ω–æ–≤).

---

## üìú –õ–∏—Ü–µ–Ω–∑–∏—è

MIT ¬© 2025 ‚Äî –°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è"""

from __future__ import annotations
import os
import logging
import asyncio  # –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–ø–¥–µ–π—Ç–æ–≤
from typing import Optional

from dotenv import load_dotenv
from fastapi import FastAPI, Request, Query
from fastapi.responses import JSONResponse
from state.session import user_sessions

from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    PreCheckoutQueryHandler,
    ApplicationHandlerStop,
    filters,
)

# === –Ω–∞—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã/—Ö–µ–Ω–¥–ª–µ—Ä—ã ===
from handlers.chat.chat_handler import handle_message
from handlers.conversation_callback import handle_callback_query
from handlers.commands.help import help_command
from handlers.commands.payments import buy_command
from handlers.commands.promo import promo_command
from handlers.commands.donate import donate_command
from handlers import settings
from components.payments import precheckout_ok, on_successful_payment
from handlers.middleware.usage_gate import usage_gate
from handlers.commands.teach import (
    build_teach_handler,
    consent_on,
    consent_off,
    glossary_cmd,
    resume_chat_callback,   # NEW
)
from handlers.callbacks.menu import menu_router
from handlers.callbacks import how_to_pay_game

# –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –∏ —Å–±—Ä–æ—Å
from handlers.commands.reset import reset_command
from components.onboarding import send_onboarding, promo_code_message

from components.profile_db import init_db as init_profiles_db
from components.usage_db import init_usage_db
from components.training_db import init_training_db

from handlers.commands.language_cmd import language_command, language_on_callback
from handlers.commands.level_cmd import level_command, level_on_callback
from handlers.commands.style_cmd import style_command, style_on_callback
from handlers.commands.consent import consent_info_command, codes_command  # —É–∂–µ –±—ã–ª–∏
from components.i18n import get_ui_lang

# -------------------------------------------------------------------------
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
# -------------------------------------------------------------------------
load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN is not set")

WEBHOOK_SECRET_PATH = os.getenv("WEBHOOK_SECRET_PATH")
if not WEBHOOK_SECRET_PATH:
    raise RuntimeError("WEBHOOK_SECRET_PATH is not set")

PUBLIC_URL = os.getenv("PUBLIC_URL")
TELEGRAM_WEBHOOK_SECRET_TOKEN = os.getenv("TELEGRAM_WEBHOOK_SECRET_TOKEN")

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("english-bot")

app = FastAPI(title="English Talking Bot")
bot_app: Application = Application.builder().token(TELEGRAM_TOKEN).build()

# -------------------------------------------------------------------------
# –û—à–∏–±–∫–∏
# -------------------------------------------------------------------------
async def on_error(update: Optional[Update], context):
    logger.exception("Unhandled error: %s", context.error)

# -------------------------------------------------------------------------
# –†–æ—É—Ç—ã
# -------------------------------------------------------------------------
@app.get("/healthz")
async def healthz():
    return {"ok": True}

@app.post(f"/{WEBHOOK_SECRET_PATH}")
async def telegram_webhook(req: Request):
    if TELEGRAM_WEBHOOK_SECRET_TOKEN:
        got = req.headers.get("X-Telegram-Bot-Api-Secret-Token")
        if got != TELEGRAM_WEBHOOK_SECRET_TOKEN:
            logger.warning("Forbidden: bad webhook secret token")
            return JSONResponse({"ok": False, "error": "forbidden"}, status_code=403)
    try:
        data = await req.json()
    except Exception as e:
        logger.warning("Bad JSON in webhook: %s", e)
        return JSONResponse({"ok": False, "error": "bad_request"}, status_code=400)
    try:
        update = Update.de_json(data, bot_app.bot)
        asyncio.create_task(bot_app.process_update(update))  # –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ
    except Exception as e:
        logger.exception("Webhook handling error: %s", e)
        return JSONResponse({"ok": False, "error": "internal"}, status_code=200)
    return {"ok": True}

@app.get("/set_webhook")
async def set_webhook(url: Optional[str] = Query(default=None)):
    target = url or (f"{PUBLIC_URL.rstrip('/')}/{WEBHOOK_SECRET_PATH}" if PUBLIC_URL else None)
    if not target:
        return JSONResponse({"ok": False, "error": "PUBLIC_URL is not set"}, status_code=400)
    logger.info("Setting webhook to %s", target)
    ok = await bot_app.bot.set_webhook(
        url=target,
        drop_pending_updates=True,
        allowed_updates=["message", "edited_message", "callback_query", "pre_checkout_query"],
        secret_token=TELEGRAM_WEBHOOK_SECRET_TOKEN or None,
    )
    return {"ok": ok, "url": target}

# -------------------------------------------------------------------------
# ¬´–®–ª—é–∑-–ø–∞—É–∑–∞¬ª: –µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω teach-–ø–∞—É–∑–∞ ‚Äî –Ω–µ –ø—É—Å–∫–∞–µ–º –≤ –æ–±—ã—á–Ω—ã–π –¥–∏–∞–ª–æ–≥
# -------------------------------------------------------------------------
def _resume_kb_text(ui: str) -> InlineKeyboardMarkup:
    txt = "‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" if ui == "ru" else "‚ñ∂Ô∏è Resume"
    return InlineKeyboardMarkup([[InlineKeyboardButton(txt, callback_data="TEACH:RESUME")]])

async def paused_gate(update: Update, ctx):
    if ctx.chat_data.get("dialog_paused"):
        ui = get_ui_lang(update, ctx)
        msg = ("–°–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º /teach. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–∞–∑–≥–æ–≤–æ—Ä—É."
               if ui == "ru"
               else "Teaching mode is active. Tap the button to resume the chat.")
        await (update.effective_message or update.message).reply_text(msg, reply_markup=_resume_kb_text(ui))
        # –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —ç—Ç–æ–≥–æ –∞–ø–¥–µ–π—Ç–∞ (—á—Ç–æ–±—ã –Ω–µ –¥–æ—à–ª–æ –¥–æ handle_message)
        raise ApplicationHandlerStop

async def promo_stage_router(update: Update, ctx):
    """–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç, –∫–æ–≥–¥–∞ –∂–¥—ë–º –≤–≤–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ."""
    try:
        session = user_sessions.setdefault(update.effective_chat.id, {})
    except Exception:
        session = {}
    if session.get("onboarding_stage") == "awaiting_promo":
        await promo_code_message(update, ctx)
        # —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –Ω–µ –ø–æ—à–ª–æ –Ω–∏ –≤ usage_gate, –Ω–∏ –≤ handle_message
        raise ApplicationHandlerStop

# -------------------------------------------------------------------------
# –•–µ–Ω–¥–ª–µ—Ä—ã
# -------------------------------------------------------------------------
def setup_handlers(app_: "Application"):
    app_.add_error_handler(on_error)

    # –ö–æ–º–∞–Ω–¥—ã
    app_.add_handler(CommandHandler("start", lambda u, c: send_onboarding(u, c)))
    app_.add_handler(CommandHandler("help", help_command))
    app_.add_handler(CommandHandler("buy", buy_command))
    app_.add_handler(CommandHandler("promo", promo_command))
    app_.add_handler(CommandHandler("donate", donate_command))
    app_.add_handler(CommandHandler("settings", settings.cmd_settings))
    app_.add_handler(CommandHandler("language", language_command))
    app_.add_handler(CommandHandler("level", level_command))
    app_.add_handler(CommandHandler("style", style_command))
    app_.add_handler(CommandHandler("consent", consent_info_command))
    app_.add_handler(CommandHandler("codes", codes_command))
    app_.add_handler(CommandHandler("consent_on", consent_on))
    app_.add_handler(CommandHandler("consent_off", consent_off))
    app_.add_handler(CommandHandler("glossary", glossary_cmd))
    app_.add_handler(build_teach_handler())

    # –ü–ª–∞—Ç–µ–∂–∏ Stars
    app_.add_handler(PreCheckoutQueryHandler(precheckout_ok))
    app_.add_handler(MessageHandler(filters.SUCCESSFUL_PAYMENT, on_successful_payment))

    # DONATE: —á–∏—Å–ª–æ–≤–æ–π –≤–≤–æ–¥ ‚Äî –±–ª–æ–∫–∏—Ä—É–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –≤ –≥—Ä—É–ø–ø–µ 0
    from handlers.commands import donate as donate_handlers
    app_.add_handler(
        MessageHandler(filters.Regex(r"^\s*\d{1,5}\s*$"), donate_handlers.on_amount_message, block=True),
        group=0,
    )

    # Callback‚Äô–∏ –º–µ–Ω—é, –Ω–∞—Å—Ç—Ä–æ–µ–∫, how-to-pay + –Ω–∞—à–∞ –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    app_.add_handler(CallbackQueryHandler(menu_router, pattern=r"^open:", block=True))
    app_.add_handler(CallbackQueryHandler(settings.on_callback, pattern=r"^(SETTINGS:|SET:)", block=True))
    app_.add_handler(CallbackQueryHandler(how_to_pay_game.how_to_pay_entry, pattern=r"^htp_start$", block=True))
    app_.add_handler(CallbackQueryHandler(how_to_pay_game.how_to_pay_how, pattern=r"^htp_how$", block=True))
    app_.add_handler(CallbackQueryHandler(how_to_pay_game.how_to_pay_exit, pattern=r"^htp_exit$", block=True))
    app_.add_handler(CallbackQueryHandler(how_to_pay_game.how_to_pay_go_buy, pattern=r"^htp_buy$", block=True))
    app_.add_handler(CallbackQueryHandler(language_on_callback, pattern=r"^CMD:LANG:", block=True))
    app_.add_handler(CallbackQueryHandler(level_on_callback, pattern=r"^CMD:LEVEL:", block=True))
    app_.add_handler(CallbackQueryHandler(style_on_callback, pattern=r"^CMD:STYLE:", block=True))
    app_.add_handler(CallbackQueryHandler(resume_chat_callback, pattern=r"^TEACH:RESUME$", block=True))  # NEW

    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–æ—É—Ç–µ—Ä callback‚Äô–æ–≤ ‚Äî –∏—Å–∫–ª—é—á–∞–µ–º –Ω–∞—à–∏ –ø—Ä–µ—Ñ–∏–∫—Å—ã
    app_.add_handler(
        CallbackQueryHandler(
            handle_callback_query,
            pattern=r"^(?!(open:|SETTINGS:|SET:|CMD:(LANG|LEVEL|STYLE):|htp_|DONATE:|TEACH:RESUME))",
        ),
        group=1,
    )

    # –ì—Ä—É–ø–ø–∞ 0 ‚Äî –≥–µ–π—Ç –ª–∏–º–∏—Ç–æ–≤/–ø—Ä–æ–º–æ –∏ –ø—Ä.
    app_.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, promo_stage_router),
        group=0,
    )

    app_.add_handler(
        MessageHandler((filters.TEXT & ~filters.COMMAND) | filters.VOICE | filters.AUDIO, usage_gate),
        group=0,
    )

    # –ì—Ä—É–ø–ø–∞ 1 ‚Äî –Ω–∞—à ¬´—à–ª—é–∑-–ø–∞—É–∑–∞¬ª
    app_.add_handler(
        MessageHandler((filters.TEXT & ~filters.COMMAND) | filters.VOICE | filters.AUDIO, paused_gate),
        group=1,
    )

    # –ì—Ä—É–ø–ø–∞ 1 ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–ª–æ–≥
    app_.add_handler(
        MessageHandler((filters.TEXT & ~filters.COMMAND) | filters.VOICE | filters.AUDIO, handle_message),
        group=1,
    )

# -------------------------------------------------------------------------
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
# -------------------------------------------------------------------------
def init_databases():
    init_profiles_db()
    init_usage_db()
    init_training_db()

@app.on_event("startup")
async def on_startup():
    init_databases()
    setup_handlers(bot_app)
    await bot_app.initialize()
    await bot_app.start()
    logger.info("Bot application is ready")

@app.on_event("shutdown")
async def on_shutdown():
    await bot_app.stop()
    await bot_app.shutdown()
    logger.info("Bot application is stopped")

@app.get("/")
async def root():
    return {"ok": True, "service": "english-talking-bot"}
